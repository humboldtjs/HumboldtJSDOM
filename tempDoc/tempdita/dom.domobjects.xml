<?xml version="1.0" encoding="UTF-8"?><apiPackage id="dom.domobjects"><apiName>dom.domobjects</apiName><apiDetail/><apiClassifier id="dom.domobjects:HTMLTableTFootElement"><apiName>HTMLTableTFootElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="dom.domobjects:CanvasGradient"><apiName>CanvasGradient</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="dom.domobjects:CanvasGradient:CanvasGradient"><apiName>CanvasGradient</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="dom.domobjects:CanvasGradient:addColorStop"><apiName>addColorStop</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="dom.domobjects:HTMLOptionElement"><apiName>HTMLOptionElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLOptionElement:defaultSelected:get"><apiName>defaultSelected</apiName><shortdesc> Returns the default value of the selected attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Returns the default value of the selected attribute. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLOptionElement:form:get"><apiName>form</apiName><shortdesc> Returns a reference to the form that contains an option.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc> Returns a reference to the form that contains an option. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLOptionElement:index:get"><apiName>index</apiName><shortdesc> Returns the index position of an option in a dropdown list.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the index position of an option in a dropdown list. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLOptionElement:label:get"><apiName>label</apiName><shortdesc> Sets or returns a label for an option (only for option-groups).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns a label for an option (only for option-groups). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLOptionElement:selected:get"><apiName>selected</apiName><shortdesc> Sets or returns the value of the selected attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Sets or returns the value of the selected attribute. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLOptionElement:text:get"><apiName>text</apiName><shortdesc> Sets or returns the text value of an option.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the text value of an option. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLOptionElement:value:get"><apiName>value</apiName><shortdesc> Sets or returns the value to be sent to the server.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value to be sent to the server. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:CSSImportRule"><apiName>CSSImportRule</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:CSSImportRule:cssText:get"><apiName>cssText</apiName><shortdesc> Returns the content of a css rule in its entirety, from the selector to the corresponding CSS declaration(s).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Returns the content of a css rule in its entirety, from the selector to the corresponding CSS declaration(s). NS/Firefox only. A useful property to easily search within a rule, by looking at both the selector and attributes of a rule all at once. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSImportRule:href:get"><apiName>href</apiName><shortdesc> The location of the imported css.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> The location of the imported css. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSImportRule:parentStylesheet:get"><apiName>parentStylesheet</apiName><shortdesc> Returns the styleSheet object that contains the current rule.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:CSSStyleSheet</apiValueClassifier></apiValueDef><apiDesc> Returns the styleSheet object that contains the current rule. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSImportRule:selectorText:get"><apiName>selectorText</apiName><shortdesc> Read/write property that returns the selector part of a rule.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Read/write property that returns the selector part of a rule. Setting this property yields unpredictable results in both Firefox and IE. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSImportRule:styleSheet:get"><apiName>styleSheet</apiName><shortdesc> Returns the imported styleSheet object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:CSSStyleSheet</apiValueClassifier></apiValueDef><apiDesc> Returns the imported styleSheet object. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSImportRule:style:get"><apiName>style</apiName><shortdesc> The "style" object of the css rule object provides read/write access to individual attributes defined in the rule, similar in fashion to the "style" object of inline styles.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc> The "style" object of the css rule object provides read/write access to individual attributes defined in the rule, similar in fashion to the "style" object of inline styles. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSImportRule:type:get"><apiName>type</apiName><shortdesc> The type of rule (3 == CSSImportRule) </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> The type of rule (3 == CSSImportRule) </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:ImageData"><apiName>ImageData</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="dom.domobjects:ImageData:ImageData"><apiName>ImageData</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="dom.domobjects:ImageData:data:get"><apiName>data</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:ImageData:height:get"><apiName>height</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:ImageData:width:get"><apiName>width</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLScriptElement"><apiName>HTMLScriptElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="dom.domobjects:EventFunction"><apiName>EventFunction</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="dom.domobjects:EventFunction:EventFunction"><apiName>EventFunction</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_</apiItemName><apiType value="EventFunction.as$22:$"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="dom.domobjects:EventFunction:f"><apiName>f</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:EventFunction:s"><apiName>s</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLImageElement"><apiName>HTMLImageElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLImageElement:alt:get"><apiName>alt</apiName><shortdesc> Sets or returns the value of the alt attribute of an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the alt attribute of an image. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLImageElement:complete:get"><apiName>complete</apiName><shortdesc> Returns whether or not the browser is finished loading an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Returns whether or not the browser is finished loading an image. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLImageElement:isMap:get"><apiName>isMap</apiName><shortdesc> Sets or returns the value of the ismap attribute of an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Sets or returns the value of the ismap attribute of an image. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLImageElement:longDesc:get"><apiName>longDesc</apiName><shortdesc> Sets or returns the value of the longdesc attribute of an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the longdesc attribute of an image. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLImageElement:lowsrc:get"><apiName>lowsrc</apiName><shortdesc> Sets or returns a URL to a low-resolution version of an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns a URL to a low-resolution version of an image. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLImageElement:onabort:get"><apiName>onabort</apiName><shortdesc> Loading of an image is interrupted.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Loading of an image is interrupted. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLImageElement:onerror:get"><apiName>onerror</apiName><shortdesc> An error occurs when loading an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> An error occurs when loading an image. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLImageElement:onload:get"><apiName>onload</apiName><shortdesc> Script to be run immediately after a the page, image or frame is loaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Script to be run immediately after a the page, image or frame is loaded. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLImageElement:src:get"><apiName>src</apiName><shortdesc> Sets or returns the value of the src attribute of an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the src attribute of an image. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLTableCellElement"><apiName>HTMLTableCellElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLTableCellElement:abbr:get"><apiName>abbr</apiName><shortdesc> Sets or returns an abbreviated version of the content in a table cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns an abbreviated version of the content in a table cell. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableCellElement:align:get"><apiName>align</apiName><shortdesc> Sets or returns the horizontal alignment of data within a table cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the horizontal alignment of data within a table cell. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableCellElement:axis:get"><apiName>axis</apiName><shortdesc> Sets or returns a comma-delimited list of related table cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns a comma-delimited list of related table cells. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableCellElement:cellIndex:get"><apiName>cellIndex</apiName><shortdesc> Returns the position of a cell in the cells collection of a row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the position of a cell in the cells collection of a row. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableCellElement:chOff:get"><apiName>chOff</apiName><shortdesc> Sets or returns the offset of alignment character for a table cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the offset of alignment character for a table cell. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableCellElement:ch:get"><apiName>ch</apiName><shortdesc> Sets or returns the alignment character for a table cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the alignment character for a table cell. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableCellElement:colSpan:get"><apiName>colSpan</apiName><shortdesc> Sets or returns the number of columns a table cell should span.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Sets or returns the number of columns a table cell should span. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableCellElement:headers:get"><apiName>headers</apiName><shortdesc> Sets or returns a list of space-separated header-cell ids.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns a list of space-separated header-cell ids. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableCellElement:rowSpan:get"><apiName>rowSpan</apiName><shortdesc> Sets or returns the number of rows a table cell should span.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Sets or returns the number of rows a table cell should span. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableCellElement:scope:get"><apiName>scope</apiName><shortdesc> Sets or returns if this cell provides header information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns if this cell provides header information. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableCellElement:vAlign:get"><apiName>vAlign</apiName><shortdesc> Sets or returns the vertical alignment of data within a table cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the vertical alignment of data within a table cell. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLButtonElement"><apiName>HTMLButtonElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLButtonElement:form:get"><apiName>form</apiName><shortdesc> Returns a reference to the form that contains a button.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc> Returns a reference to the form that contains a button. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLButtonElement:type:get"><apiName>type</apiName><shortdesc> Sets or returns the type of a button.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the type of a button. Allowed values are: "submit", "button" and "reset". </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLButtonElement:value:get"><apiName>value</apiName><shortdesc> Sets or returns the value of the value attribute of a button.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the value attribute of a button. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:History"><apiName>History</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="dom.domobjects:History:back"><apiName>back</apiName><shortdesc> Loads the previous URL in the history list.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Loads the previous URL in the history list. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:History:forward"><apiName>forward</apiName><shortdesc> Loads the next URL in the history list.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Loads the next URL in the history list. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:History:go"><apiName>go</apiName><shortdesc> Loads a specific URL from the history list.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>number</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Loads a specific URL from the history list. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:History:length:get"><apiName>length</apiName><shortdesc> Returns the number of URLs in the history list.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the number of URLs in the history list. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLBaseElement"><apiName>HTMLBaseElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLBaseElement:href:get"><apiName>href</apiName><shortdesc> Sets or returns the value of the href attribute in a base element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the href attribute in a base element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLBaseElement:target:get"><apiName>target</apiName><shortdesc> 
		 Sets or returns the value of the target attribute in a base element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> 
		 Sets or returns the value of the target attribute in a base element.
		 The following values are supported:
		 "_blank" - URL is loaded into a new window. This is default
		 "_parent" - URL is loaded into the parent frame
		 "_self" - URL replaces the current page
		 "_top" - URL replaces any framesets that may be loaded
		 name - The name of the window 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:CSSStyleSheet"><apiName>CSSStyleSheet</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="dom.domobjects:CSSStyleSheet:addRule"><apiName>addRule</apiName><shortdesc> IE: Adds a new rule to the stylesheet, where the parameter "selector" is the rule's selector text (ie: "p", "div b" etc), and "declaration" is the rule's properties and coresponding values(ie: "background-color: yellow; color: brown").</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>selector</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>declaration</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam></apiOperationDef><apiDesc> IE: Adds a new rule to the stylesheet, where the parameter "selector" is the rule's selector text (ie: "p", "div b" etc), and "declaration" is the rule's properties and coresponding values(ie: "background-color: yellow; color: brown"). An optional "index" parameter (integer) lets you specify the position of the new rule within the stylesheet, whereby 0 for example would insert the new rule as the very first one (default is -1, which adds the new rule to the end of the stylesheet). </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CSSStyleSheet:deleteRule"><apiName>deleteRule</apiName><shortdesc> Not in IE: Removes a rule from the stylesheet based on its position in the cssRules[] collection.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Not in IE: Removes a rule from the stylesheet based on its position in the cssRules[] collection. Use the parameter "index" (integer) to specify this position. DOM2 NS/Firefox only property. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CSSStyleSheet:insertRule"><apiName>insertRule</apiName><shortdesc> Not in IE: Inserts a new rule to the stylesheet, where the parameter "rule" is a string containing the entire rule to add (ie: #myid{color: red; border: 1px solid black}), and "index", an integer specifying the position within cssRules[] to insert the new rule.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rule</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Not in IE: Inserts a new rule to the stylesheet, where the parameter "rule" is a string containing the entire rule to add (ie: #myid{color: red; border: 1px solid black}), and "index", an integer specifying the position within cssRules[] to insert the new rule. NS/Firefox only property. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CSSStyleSheet:removeRule"><apiName>removeRule</apiName><shortdesc> IE: Removes the first rule of a stylesheet.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam></apiOperationDef><apiDesc> IE: Removes the first rule of a stylesheet. Enter an optional index (integer) to remove a specific rule based on its position in the rules[] collection. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:CSSStyleSheet:cssRules:get"><apiName>cssRules</apiName><shortdesc> DOM2 based CSS Rule object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> DOM2 based CSS Rule object. Supported in NS/ Firefox. (of type CSSRule) </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleSheet:disabled:get"><apiName>disabled</apiName><shortdesc> Read/write property that specifies whether a stylesheet is diabled or not.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Read/write property that specifies whether a stylesheet is diabled or not. Default value is false. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleSheet:href:get"><apiName>href</apiName><shortdesc> Read/write property that specifies the URL of an external stylesheet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Read/write property that specifies the URL of an external stylesheet. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleSheet:length:get"><apiName>length</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleSheet:ownerNode:get"><apiName>ownerNode</apiName><shortdesc> Not in IE: References the document tree node that contains the current stylesheet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Document</apiValueClassifier></apiValueDef><apiDesc> Not in IE: References the document tree node that contains the current stylesheet. For regular HTML pages, ownerNode typically returns the LINK or STYLE element on the stylesheet. For XML, it may be the linking processing instruction. NS6+/Firefox only property. In IE, the equivalent is "owningElement". </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleSheet:ownerRule:get"><apiName>ownerRule</apiName><shortdesc> For stylesheets that are defined using an </shortdesc><prolog><asCustoms><import>rule, returns its CSSImportRule object. You can use the cssRules[] object to add or remove rules within the stylesheet. NS6+/Firefox only property. </import></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:CSSImportRule</apiValueClassifier></apiValueDef><apiDesc> For stylesheets that are defined using an </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleSheet:owningElement:get"><apiName>owningElement</apiName><shortdesc> IE: References the document tree node that contains the current stylesheet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Document</apiValueClassifier></apiValueDef><apiDesc> IE: References the document tree node that contains the current stylesheet. IE only property. In NS6+/Firefox, the equivalent is "ownerNode". </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleSheet:parentStyleSheet:get"><apiName>parentStyleSheet</apiName><shortdesc> For stylesheets that are included on the page via the </shortdesc><prolog><asCustoms><page>rule, parentStyleSheet references the top level stylesheet. For standard LINK or STYLE stylehseets, this property returns null. </page></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:CSSStyleSheet</apiValueClassifier></apiValueDef><apiDesc> For stylesheets that are included on the page via the </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleSheet:rules:get"><apiName>rules</apiName><shortdesc> IE's CSS Rule object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> IE's CSS Rule object. (of type CSSRule) </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleSheet:screen:get"><apiName>screen</apiName><shortdesc> Specifies the medium of the stylesheet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Specifies the medium of the stylesheet. Default value is "screen". </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLAreaElement"><apiName>HTMLAreaElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLAreaElement:alt:get"><apiName>alt</apiName><shortdesc> Sets or returns the value of the alt attribute of an area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the alt attribute of an area. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:coords:get"><apiName>coords</apiName><shortdesc> Sets or returns the value of the coords attribute of an area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the coords attribute of an area. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:hash:get"><apiName>hash</apiName><shortdesc> Sets and returns the anchor portion of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the anchor portion of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:host:get"><apiName>host</apiName><shortdesc> Sets and returns the hostname and port of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the hostname and port of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:hostname:get"><apiName>hostname</apiName><shortdesc> Sets and returns the hostname of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the hostname of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:href:get"><apiName>href</apiName><shortdesc> Sets and returns the entire URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the entire URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:nohref:get"><apiName>nohref</apiName><shortdesc> Sets or returns the value of the nohref attribute of an area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the nohref attribute of an area. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:pathname:get"><apiName>pathname</apiName><shortdesc> Sets and returns the path name of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the path name of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:port:get"><apiName>port</apiName><shortdesc> Sets and returns the port number the server uses for a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the port number the server uses for a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:protocol:get"><apiName>protocol</apiName><shortdesc> Sets and returns the protocol of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the protocol of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:search:get"><apiName>search</apiName><shortdesc> Sets and returns the query portion of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the query portion of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:shape:get"><apiName>shape</apiName><shortdesc> Sets or returns the value of the shape attribute of an area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the shape attribute of an area. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAreaElement:target:get"><apiName>target</apiName><shortdesc> 
		 Sets or returns the value of the target attribute of an area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> 
		 Sets or returns the value of the target attribute of an area.
		 The following values are supported:
		 "_blank" - URL is loaded into a new window. This is default
		 "_parent" - URL is loaded into the parent frame
		 "_self" - URL replaces the current page
		 "_top" - URL replaces any framesets that may be loaded
		 name - The name of the window 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:CanvasRenderingContext2D"><apiName>CanvasRenderingContext2D</apiName><shortdesc>
	 http://www.whatwg.org/specs/web-apps/current-work/#2dcontext
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 http://www.whatwg.org/specs/web-apps/current-work/#2dcontext
	 </apiDesc></apiClassifierDetail><apiConstructor id="dom.domobjects:CanvasRenderingContext2D:CanvasRenderingContext2D"><apiName>CanvasRenderingContext2D</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="dom.domobjects:CanvasRenderingContext2D:arcTo"><apiName>arcTo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x1</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y1</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>x2</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y2</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>radius</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:arc"><apiName>arc</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>radius</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>startAngle</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>endAngle</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>anticlockwise</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:beginPath"><apiName>beginPath</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:bezierCurveTo"><apiName>bezierCurveTo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cp1x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>cp1y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>cp2x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>cp2y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:clearRect"><apiName>clearRect</apiName><shortdesc>
		 Clear an area of the image
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>The x position of the rectangle to be cleared
		 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>The y position of the rectangle to be cleared
		 </apiDesc></apiParam><apiParam><apiItemName>w</apiItemName><apiType value="Number"/><apiDesc>The width of the rectangle to be cleared
		 </apiDesc></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/><apiDesc>The height of the rectangle to be cleared
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Clear an area of the image
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:clip"><apiName>clip</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:closePath"><apiName>closePath</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:createImageData"><apiName>createImageData</apiName><shortdesc>
		 Create a new ImageData.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:ImageData</apiOperationClassifier></apiReturn><apiParam><apiItemName>rest</apiItemName><apiType value="restParam"/><apiDesc>The width of the ImageData
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Create a new ImageData. Has two forms:
		 
		 Either:
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:createLinearGradient"><apiName>createLinearGradient</apiName><shortdesc>
		 Create a linear gradient between two points
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:CanvasGradient</apiOperationClassifier></apiReturn><apiParam><apiItemName>x0</apiItemName><apiType value="Number"/><apiDesc>The x position of the start point of the gradient
		 </apiDesc></apiParam><apiParam><apiItemName>y0</apiItemName><apiType value="Number"/><apiDesc>The y position of the start point of the gradient
		 </apiDesc></apiParam><apiParam><apiItemName>x1</apiItemName><apiType value="Number"/><apiDesc>The x position of the end point of the gradient
		 </apiDesc></apiParam><apiParam><apiItemName>y1</apiItemName><apiType value="Number"/><apiDesc>The y position of the end point of the gradient
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Create a linear gradient between two points
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:createPattern"><apiName>createPattern</apiName><shortdesc>
		 Create a pattern
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:CanvasPattern</apiOperationClassifier></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier><apiDesc>An image to use as a pattern. Must be either an HTMLImageElement, HTMLCanvasElement or HTMLVideoElement
		 </apiDesc></apiParam><apiParam><apiItemName>repetition</apiItemName><apiType value="String"/><apiDesc>A string indicating how this pattern should be repeated
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Create a pattern
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:createRadialGradient"><apiName>createRadialGradient</apiName><shortdesc>
		 Create a linear gradient between two points
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:CanvasGradient</apiOperationClassifier></apiReturn><apiParam><apiItemName>x0</apiItemName><apiType value="Number"/><apiDesc>The x position of the start point of the gradient
		 </apiDesc></apiParam><apiParam><apiItemName>y0</apiItemName><apiType value="Number"/><apiDesc>The y position of the start point of the gradient
		 </apiDesc></apiParam><apiParam><apiItemName>r0</apiItemName><apiType value="Number"/><apiDesc>The radius of the start point of the gradient
		 </apiDesc></apiParam><apiParam><apiItemName>x1</apiItemName><apiType value="Number"/><apiDesc>The x position of the end point of the gradient
		 </apiDesc></apiParam><apiParam><apiItemName>y1</apiItemName><apiType value="Number"/><apiDesc>The y position of the end point of the gradient
		 </apiDesc></apiParam><apiParam><apiItemName>r1</apiItemName><apiType value="Number"/><apiDesc>The radius of the end point of the gradient
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Create a linear gradient between two points
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:drawFocusRing"><apiName>drawFocusRing</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiParam><apiParam><apiItemName>xCaret</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>yCaret</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>canDrawCustom</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:drawImage"><apiName>drawImage</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier><apiDesc>Must be HTMLImageElement, HTMLCanvasElement or HTMLVideoElement
		 </apiDesc></apiParam><apiParam><apiItemName>x1</apiItemName><apiType value="Number"/><apiDesc>If defined then all parameters become required
		 </apiDesc></apiParam><apiParam><apiItemName>y1</apiItemName><apiType value="Number"/><apiDesc>If defined then all parameters become required
		 </apiDesc></apiParam><apiParam><apiItemName>w1</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>If defined then all parameters become required
		 </apiDesc></apiParam><apiParam><apiItemName>h1</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>If defined then all parameters become required
		 </apiDesc></apiParam><apiParam><apiItemName>x2</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam><apiParam><apiItemName>y2</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam><apiParam><apiItemName>w2</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam><apiParam><apiItemName>h2</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:fillRect"><apiName>fillRect</apiName><shortdesc>
		 Fill an area of the image
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>The x position of the rectangle to be filled
		 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>The y position of the rectangle to be filled
		 </apiDesc></apiParam><apiParam><apiItemName>w</apiItemName><apiType value="Number"/><apiDesc>The width of the rectangle to be filled
		 </apiDesc></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/><apiDesc>The height of the rectangle to be filled
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Fill an area of the image
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:fillText"><apiName>fillText</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>text</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>maxWidth</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:getImageData"><apiName>getImageData</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:ImageData</apiOperationClassifier></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>w</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:isPointInPath"><apiName>isPointInPath</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:lineTo"><apiName>lineTo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:measureText"><apiName>measureText</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:TextMetrics</apiOperationClassifier></apiReturn><apiParam><apiItemName>text</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:moveTo"><apiName>moveTo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:putImageData"><apiName>putImageData</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>dom.domobjects:ImageData</apiOperationClassifier></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>dirtyX</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam><apiParam><apiItemName>dirtyY</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam><apiParam><apiItemName>dirtyWidth</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam><apiParam><apiItemName>dirtyHeight</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:quadraticCurveTo"><apiName>quadraticCurveTo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cpx</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>cpy</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:rect"><apiName>rect</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>w</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:restore"><apiName>restore</apiName><shortdesc>
		 Restore the previously saved transformation matrix
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Restore the previously saved transformation matrix
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:rotate"><apiName>rotate</apiName><shortdesc>
		 Rotate the transformation matrix
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angle</apiItemName><apiType value="Number"/><apiDesc>The angle to rotate the matrix
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Rotate the transformation matrix
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:save"><apiName>save</apiName><shortdesc>
		 Save the current transformation matrix
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Save the current transformation matrix
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:scale"><apiName>scale</apiName><shortdesc>
		 Scale the transformation matrix
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>The amount to scale the matrix in the horizontal direction
		 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>The amount to scale the matrix in the vertical direction
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Scale the transformation matrix
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:setTransform"><apiName>setTransform</apiName><shortdesc>
		 Set the transformation matrix to the given transform
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>a</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>b</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>c</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>d</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>e</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>f</apiItemName><apiType value="Number"/><apiDesc>
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Set the transformation matrix to the given transform
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:strokeRect"><apiName>strokeRect</apiName><shortdesc>
		 Stroke an area of the image
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>The x position of the rectangle to be stroked
		 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>The y position of the rectangle to be stroked
		 </apiDesc></apiParam><apiParam><apiItemName>w</apiItemName><apiType value="Number"/><apiDesc>The width of the rectangle to be stroked
		 </apiDesc></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/><apiDesc>The height of the rectangle to be stroked
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Stroke an area of the image
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:strokeText"><apiName>strokeText</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>text</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>maxWidth</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:stroke"><apiName>stroke</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:transform"><apiName>transform</apiName><shortdesc>
		 Transform the transformation matrix
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>a</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>b</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>c</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>d</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>e</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>f</apiItemName><apiType value="Number"/><apiDesc>
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Transform the transformation matrix
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:CanvasRenderingContext2D:translate"><apiName>translate</apiName><shortdesc>
		 Translate the transformation matrix
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>The amount to translate the matrix in the horizontal direction
		 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>The amount to translate the matrix in the vertical direction
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Translate the transformation matrix
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:CanvasRenderingContext2D:fillStyle"><apiName>fillStyle</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:font"><apiName>font</apiName><shortdesc>
		 Font definition string (default "10px sans-serif")
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>10px sans-serif</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Font definition string (default "10px sans-serif")
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:globalAlpha"><apiName>globalAlpha</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1.0</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:globalCompositeOperation"><apiName>globalCompositeOperation</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>source-over</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:lineCap"><apiName>lineCap</apiName><shortdesc>
		 Must be one of "butt", "round", "square" (default is "butt")
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>butt</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Must be one of "butt", "round", "square" (default is "butt")
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:lineJoin"><apiName>lineJoin</apiName><shortdesc>
		 Must be one of "round", "bevel", "miter" (default is "miter")
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>miter</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Must be one of "round", "bevel", "miter" (default is "miter")
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:lineWidth"><apiName>lineWidth</apiName><shortdesc>
		 Line width (default is 1)
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1.0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Line width (default is 1)
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:miterLimit"><apiName>miterLimit</apiName><shortdesc>
		 Limit of the miter length (default is 10)
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>10</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Limit of the miter length (default is 10)
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:shadowBlur"><apiName>shadowBlur</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:shadowColor"><apiName>shadowColor</apiName><shortdesc>
		 Color to use for the shadow (default transparent black)
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
		 Color to use for the shadow (default transparent black)
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:shadowOffsetX"><apiName>shadowOffsetX</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:shadowOffsetY"><apiName>shadowOffsetY</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:strokeStyle"><apiName>strokeStyle</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:textAlign"><apiName>textAlign</apiName><shortdesc>
		 Must be one of "start", "end", "left", "right", "center" (default is "start")
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>start</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Must be one of "start", "end", "left", "right", "center" (default is "start")
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:textBaseline"><apiName>textBaseline</apiName><shortdesc>
		 Must be one of "top", "hanging", "middle", "alphabetic", "ideographic", "bottom" (default is "alphabetic")
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>alphabetic</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Must be one of "top", "hanging", "middle", "alphabetic", "ideographic", "bottom" (default is "alphabetic")
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CanvasRenderingContext2D:canvas:get"><apiName>canvas</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLCanvasElement</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:Attribute"><apiName>Attribute</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="dom.domobjects:HTMLLinkElement"><apiName>HTMLLinkElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLAnchorElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLLinkElement:media:get"><apiName>media</apiName><shortdesc> Sets or returns on what device the document will be displayed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns on what device the document will be displayed. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLFormElement"><apiName>HTMLFormElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="dom.domobjects:HTMLFormElement:reset"><apiName>reset</apiName><shortdesc> Resets a form.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Resets a form. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLFormElement:submit"><apiName>submit</apiName><shortdesc> Submits a form.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Submits a form. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:HTMLFormElement:acceptCharset:get"><apiName>acceptCharset</apiName><shortdesc> Sets or returns the value of the accept-charset attribute in a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the accept-charset attribute in a form. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFormElement:action:get"><apiName>action</apiName><shortdesc> Sets or returns the value of the action attribute in a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the action attribute in a form. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFormElement:elements:get"><apiName>elements</apiName><shortdesc> Returns an array of all elements in a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> Returns an array of all elements in a form. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFormElement:enctype:get"><apiName>enctype</apiName><shortdesc> Sets or returns the value of the enctype attribute in a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the enctype attribute in a form. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFormElement:length:get"><apiName>length</apiName><shortdesc> Returns the number of elements in a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the number of elements in a form. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFormElement:method:get"><apiName>method</apiName><shortdesc> Sets or returns the value of the method attribute in a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the method attribute in a form. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFormElement:onreset:get"><apiName>onreset</apiName><shortdesc> The reset button is clicked.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> The reset button is clicked. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFormElement:onsubmit:get"><apiName>onsubmit</apiName><shortdesc> The submit button is clicked.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> The submit button is clicked. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFormElement:target:get"><apiName>target</apiName><shortdesc> 
		 Sets or returns the value of the target attribute in a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> 
		 Sets or returns the value of the target attribute in a form.
		 The following values are supported:
		 "_blank" - URL is loaded into a new window. This is default
		 "_parent" - URL is loaded into the parent frame
		 "_self" - URL replaces the current page
		 "_top" - URL replaces any framesets that may be loaded
		 name - The name of the window 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLFrameElement"><apiName>HTMLFrameElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLFrameElement:align:get"><apiName>align</apiName><shortdesc> Sets or returns the value of the align attribute in an iframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the align attribute in an iframe. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFrameElement:contentDocument:get"><apiName>contentDocument</apiName><shortdesc> Returns the document object generated by a frame/iframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Document</apiValueClassifier></apiValueDef><apiDesc> Returns the document object generated by a frame/iframe. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFrameElement:contentWindow:get"><apiName>contentWindow</apiName><shortdesc> Returns the window object generated by a frame/iframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Window</apiValueClassifier></apiValueDef><apiDesc> Returns the window object generated by a frame/iframe. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFrameElement:frameBorder:get"><apiName>frameBorder</apiName><shortdesc> Sets or returns the value of the frameborder attribute in a frame/iframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the frameborder attribute in a frame/iframe. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFrameElement:longDesc:get"><apiName>longDesc</apiName><shortdesc> Sets or returns the value of the longdesc attribute in a frame/iframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the longdesc attribute in a frame/iframe. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFrameElement:marginHeight:get"><apiName>marginHeight</apiName><shortdesc> Sets or returns the value of the marginheight attribute in a frame/iframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Sets or returns the value of the marginheight attribute in a frame/iframe. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFrameElement:marginWidth:get"><apiName>marginWidth</apiName><shortdesc> Sets or returns the value of the marginwidth attribute in a frame/iframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Sets or returns the value of the marginwidth attribute in a frame/iframe. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFrameElement:noResize:get"><apiName>noResize</apiName><shortdesc> Sets or returns the value of the noresize attribute in a frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Sets or returns the value of the noresize attribute in a frame. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFrameElement:onload:get"><apiName>onload</apiName><shortdesc> Script to be run immediately after a the page, image or frame is loaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Script to be run immediately after a the page, image or frame is loaded. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFrameElement:scrolling:get"><apiName>scrolling</apiName><shortdesc> Sets or returns the value of the scrolling attribute in a frame/iframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the scrolling attribute in a frame/iframe. Allowed values are "auto", "yes" and "no". </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFrameElement:src:get"><apiName>src</apiName><shortdesc> Sets or returns the value of the src attribute in a frame/iframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the src attribute in a frame/iframe. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:CSSStyleDeclaration"><apiName>CSSStyleDeclaration</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:CSSStyleDeclaration:backgroundAttachment:get"><apiName>backgroundAttachment</apiName><shortdesc> Sets whether a background-image is fixed or scrolls with the page.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets whether a background-image is fixed or scrolls with the page. Either "scroll" or "fixed". </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc> Sets the background-color of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the background-color of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:backgroundImage:get"><apiName>backgroundImage</apiName><shortdesc> Sets the background-image of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the background-image of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:backgroundPositionX:get"><apiName>backgroundPositionX</apiName><shortdesc> Sets the x-coordinates of the backgroundPosition property.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the x-coordinates of the backgroundPosition property. For FF requires backgroundAttachment to be "fixed".</apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:backgroundPositionY:get"><apiName>backgroundPositionY</apiName><shortdesc> Sets the y-coordinates of the backgroundPosition property.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the y-coordinates of the backgroundPosition property. For FF requires backgroundAttachment to be "fixed".</apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:backgroundPosition:get"><apiName>backgroundPosition</apiName><shortdesc> Sets the starting position of a background-image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the starting position of a background-image. For FF requires backgroundAttachment to be "fixed". </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:backgroundRepeat:get"><apiName>backgroundRepeat</apiName><shortdesc> Sets if/how a background-image will be repeated.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets if/how a background-image will be repeated. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:background:get"><apiName>background</apiName><shortdesc> Sets all background properties in one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets all background properties in one. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderBottomColor:get"><apiName>borderBottomColor</apiName><shortdesc> Sets the color of the bottom border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the color of the bottom border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderBottomStyle:get"><apiName>borderBottomStyle</apiName><shortdesc> Sets the style of the bottom border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the style of the bottom border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderBottomWidth:get"><apiName>borderBottomWidth</apiName><shortdesc> Sets the width of the bottom border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the width of the bottom border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderBottom:get"><apiName>borderBottom</apiName><shortdesc> Sets all properties for the bottom border in one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets all properties for the bottom border in one. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderCollapse:get"><apiName>borderCollapse</apiName><shortdesc> Sets whether the table border are collapsed into a single border or detached as in standard HTML.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets whether the table border are collapsed into a single border or detached as in standard HTML. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderColor:get"><apiName>borderColor</apiName><shortdesc> Sets the color of all four borders (can have up to four colors).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the color of all four borders (can have up to four colors). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderLeftColor:get"><apiName>borderLeftColor</apiName><shortdesc> Sets the color of the left border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the color of the left border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderLeftStyle:get"><apiName>borderLeftStyle</apiName><shortdesc> Sets the style of the left border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the style of the left border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderLeftWidth:get"><apiName>borderLeftWidth</apiName><shortdesc> Sets the width of the left border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the width of the left border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderLeft:get"><apiName>borderLeft</apiName><shortdesc> Sets all properties for the left border in one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets all properties for the left border in one. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderRightColor:get"><apiName>borderRightColor</apiName><shortdesc> Sets the color of the right border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the color of the right border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderRightStyle:get"><apiName>borderRightStyle</apiName><shortdesc> Sets the style of the right border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the style of the right border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderRightWidth:get"><apiName>borderRightWidth</apiName><shortdesc> Sets the width of the right border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the width of the right border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderRight:get"><apiName>borderRight</apiName><shortdesc> Sets all properties for the right border in one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets all properties for the right border in one. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderSpacing:get"><apiName>borderSpacing</apiName><shortdesc> Sets the distance that separates cell borders.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the distance that separates cell borders. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderStyle:get"><apiName>borderStyle</apiName><shortdesc> Sets the style of all four borders (can have up to four styles).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the style of all four borders (can have up to four styles). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderTopColor:get"><apiName>borderTopColor</apiName><shortdesc> Sets the color of the top border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the color of the top border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderTopStyle:get"><apiName>borderTopStyle</apiName><shortdesc> Sets the style of the top border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the style of the top border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderTopWidth:get"><apiName>borderTopWidth</apiName><shortdesc> Sets the width of the top border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the width of the top border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderTop:get"><apiName>borderTop</apiName><shortdesc> Sets all properties for the top border in one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets all properties for the top border in one. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:borderWidth:get"><apiName>borderWidth</apiName><shortdesc> Sets the width of all four borders (can have up to four widths).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the width of all four borders (can have up to four widths). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:border:get"><apiName>border</apiName><shortdesc> Sets all properties for the four borders in one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets all properties for the four borders in one. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:bottom:get"><apiName>bottom</apiName><shortdesc> Sets how far the bottom edge of an element is above/below the bottom edge of the parent element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets how far the bottom edge of an element is above/below the bottom edge of the parent element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:captionSide:get"><apiName>captionSide</apiName><shortdesc> Sets the position of the table caption.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the position of the table caption. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:clear:get"><apiName>clear</apiName><shortdesc> Sets on which sides of an element other floating elements are not allowed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets on which sides of an element other floating elements are not allowed. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:clip:get"><apiName>clip</apiName><shortdesc> Sets the shape of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the shape of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:color:get"><apiName>color</apiName><shortdesc> Sets the color of the text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the color of the text. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:content:get"><apiName>content</apiName><shortdesc> Sets meta-information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets meta-information. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:counterIncrement:get"><apiName>counterIncrement</apiName><shortdesc> Sets a list of counter names, followed by an integer.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets a list of counter names, followed by an integer. The integer indicates by how much the counter is incremented for every occurrence of the element. The default is 1. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:counterReset:get"><apiName>counterReset</apiName><shortdesc> Sets a list of counter names, followed by an integer.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets a list of counter names, followed by an integer. The integer gives the value that the counter is set to on each occurrence of the element. The default is 0. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:cssFloat:get"><apiName>cssFloat</apiName><shortdesc> Sets where an image or a text will appear (float) in another element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets where an image or a text will appear (float) in another element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:cssText:get"><apiName>cssText</apiName><shortdesc> </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:cursor:get"><apiName>cursor</apiName><shortdesc> Sets the type of cursor to be displayed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the type of cursor to be displayed. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:direction:get"><apiName>direction</apiName><shortdesc> Sets the text direction of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the text direction of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:display:get"><apiName>display</apiName><shortdesc> Sets how an element will be displayed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets how an element will be displayed. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:emptyCells:get"><apiName>emptyCells</apiName><shortdesc> Sets whether or not to show empty cells in a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets whether or not to show empty cells in a table. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:fontFamily:get"><apiName>fontFamily</apiName><shortdesc> Sets the font of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the font of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:fontSizeAdjust:get"><apiName>fontSizeAdjust</apiName><shortdesc> Sets/adjusts the size of a text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets/adjusts the size of a text. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:fontSize:get"><apiName>fontSize</apiName><shortdesc> Sets the font-size of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the font-size of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:fontStretch:get"><apiName>fontStretch</apiName><shortdesc> Sets how to condense or stretch a font.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets how to condense or stretch a font. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:fontStyle:get"><apiName>fontStyle</apiName><shortdesc> Sets the font-style of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the font-style of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:fontVariant:get"><apiName>fontVariant</apiName><shortdesc> Displays text in a small-caps font.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Displays text in a small-caps font. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:fontWeight:get"><apiName>fontWeight</apiName><shortdesc> Sets the boldness of the font.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the boldness of the font. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:font:get"><apiName>font</apiName><shortdesc> Sets all font properties in one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets all font properties in one. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:height:get"><apiName>height</apiName><shortdesc> Sets the height of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the height of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:left:get"><apiName>left</apiName><shortdesc> Sets how far the left edge of an element is to the right/left of the left edge of the parent element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets how far the left edge of an element is to the right/left of the left edge of the parent element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:letterSpacing:get"><apiName>letterSpacing</apiName><shortdesc> Sets the space between characters.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the space between characters. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:lineHeight:get"><apiName>lineHeight</apiName><shortdesc> Sets the distance between lines.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the distance between lines. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:listStyleImage:get"><apiName>listStyleImage</apiName><shortdesc> Sets an image as the list-item marker.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets an image as the list-item marker. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:listStylePosition:get"><apiName>listStylePosition</apiName><shortdesc> Positions the list-item marker.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Positions the list-item marker. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:listStyleType:get"><apiName>listStyleType</apiName><shortdesc> Sets the list-item marker type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the list-item marker type. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:listStyle:get"><apiName>listStyle</apiName><shortdesc> Sets all the properties for a list in one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets all the properties for a list in one. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:marginBottom:get"><apiName>marginBottom</apiName><shortdesc> Sets the bottom margin of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the bottom margin of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:marginLeft:get"><apiName>marginLeft</apiName><shortdesc> Sets the left margin of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the left margin of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:marginRight:get"><apiName>marginRight</apiName><shortdesc> Sets the right margin of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the right margin of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:marginTop:get"><apiName>marginTop</apiName><shortdesc> Sets the top margin of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the top margin of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:margin:get"><apiName>margin</apiName><shortdesc> Sets the margins of an element (can have up to four values).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the margins of an element (can have up to four values). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:markerOffset:get"><apiName>markerOffset</apiName><shortdesc> Sets the distance between the nearest border edges of a marker box and its principal box.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the distance between the nearest border edges of a marker box and its principal box. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:marks:get"><apiName>marks</apiName><shortdesc> Sets whether cross marks or crop marks should be rendered just outside the page box edge.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets whether cross marks or crop marks should be rendered just outside the page box edge. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:maxHeight:get"><apiName>maxHeight</apiName><shortdesc> Sets the maximum height of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the maximum height of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:maxWidth:get"><apiName>maxWidth</apiName><shortdesc> Sets the maximum width of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the maximum width of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:minHeight:get"><apiName>minHeight</apiName><shortdesc> Sets the minimum height of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the minimum height of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:minWidth:get"><apiName>minWidth</apiName><shortdesc> Sets the minimum width of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the minimum width of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:orphans:get"><apiName>orphans</apiName><shortdesc> Sets the minimum number of lines for a paragraph that must be left at the bottom of a page.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the minimum number of lines for a paragraph that must be left at the bottom of a page. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:outlineColor:get"><apiName>outlineColor</apiName><shortdesc> Sets the color of the outline around a element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the color of the outline around a element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:outlineStyle:get"><apiName>outlineStyle</apiName><shortdesc> Sets the style of the outline around an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the style of the outline around an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:outlineWidth:get"><apiName>outlineWidth</apiName><shortdesc> Sets the width of the outline around an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the width of the outline around an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:outline:get"><apiName>outline</apiName><shortdesc> Sets all outline properties in one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets all outline properties in one. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:overflow:get"><apiName>overflow</apiName><shortdesc> Specifies what to do with content that does not fit in an element box.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Specifies what to do with content that does not fit in an element box. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:paddingBottom:get"><apiName>paddingBottom</apiName><shortdesc> Sets the bottom padding of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the bottom padding of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:paddingLeft:get"><apiName>paddingLeft</apiName><shortdesc> Sets the left padding of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the left padding of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:paddingRight:get"><apiName>paddingRight</apiName><shortdesc> Sets the right padding of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the right padding of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:paddingTop:get"><apiName>paddingTop</apiName><shortdesc> Sets the top padding of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the top padding of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:padding:get"><apiName>padding</apiName><shortdesc> Sets the padding of an element (can have up to four values).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the padding of an element (can have up to four values). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:pageBreakAfter:get"><apiName>pageBreakAfter</apiName><shortdesc> Sets the page-breaking behavior after an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the page-breaking behavior after an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:pageBreakBefore:get"><apiName>pageBreakBefore</apiName><shortdesc> Sets the page-breaking behavior before an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the page-breaking behavior before an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:pageBreakInside:get"><apiName>pageBreakInside</apiName><shortdesc> Sets the page-breaking behavior inside an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the page-breaking behavior inside an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:page:get"><apiName>page</apiName><shortdesc> Sets a page type to use when displaying an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets a page type to use when displaying an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:position:get"><apiName>position</apiName><shortdesc> Places an element in a static, relative, absolute or fixed position.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Places an element in a static, relative, absolute or fixed position. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:quotes:get"><apiName>quotes</apiName><shortdesc> Sets which quotation marks to use in a text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets which quotation marks to use in a text. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:right:get"><apiName>right</apiName><shortdesc> Sets how far the right edge of an element is to the left/right of the right edge of the parent element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets how far the right edge of an element is to the left/right of the right edge of the parent element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:size:get"><apiName>size</apiName><shortdesc> Sets the orientation and size of a page.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the orientation and size of a page. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:tableLayout:get"><apiName>tableLayout</apiName><shortdesc> Sets the algorithm used to display the table cells, rows, and columns.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the algorithm used to display the table cells, rows, and columns. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:textAlign:get"><apiName>textAlign</apiName><shortdesc> Aligns the text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Aligns the text. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:textDecoration:get"><apiName>textDecoration</apiName><shortdesc> Sets the decoration of a text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the decoration of a text. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:textIndent:get"><apiName>textIndent</apiName><shortdesc> Indents the first line of text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Indents the first line of text. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:textShadow:get"><apiName>textShadow</apiName><shortdesc> Sets the shadow effect of a text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the shadow effect of a text. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:textTransform:get"><apiName>textTransform</apiName><shortdesc> Sets capitalization effect on a text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets capitalization effect on a text. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:top:get"><apiName>top</apiName><shortdesc> Sets how far the top edge of an element is above/below the top edge of the parent element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets how far the top edge of an element is above/below the top edge of the parent element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:unicodeBidi:get"><apiName>unicodeBidi</apiName><shortdesc> </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:verticalAlign:get"><apiName>verticalAlign</apiName><shortdesc> Sets the vertical alignment of content in an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the vertical alignment of content in an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:visibility:get"><apiName>visibility</apiName><shortdesc> Sets whether or not an element should be visible.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets whether or not an element should be visible. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:whiteSpace:get"><apiName>whiteSpace</apiName><shortdesc> Sets how to handle line-breaks and white-space in a text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets how to handle line-breaks and white-space in a text. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:widows:get"><apiName>widows</apiName><shortdesc> Sets the minimum number of lines for a paragraph that must be left at the top of a page.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the minimum number of lines for a paragraph that must be left at the top of a page. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:width:get"><apiName>width</apiName><shortdesc> Sets the width of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the width of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:wordSpacing:get"><apiName>wordSpacing</apiName><shortdesc> Sets the space between words in a text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the space between words in a text. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleDeclaration:zIndex:get"><apiName>zIndex</apiName><shortdesc> Sets the stack order of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets the stack order of an element. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:Window"><apiName>Window</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>dom.domobjects:DOMBase</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="dom.domobjects:Window:Window"><apiName>Window</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_</apiItemName><apiType value="Window.as$29:_$"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="dom.domobjects:Window:alert"><apiName>alert</apiName><shortdesc> Displays an alert box with a message and an OK button.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc> Displays an alert box with a message and an OK button. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:blur"><apiName>blur</apiName><shortdesc> Removes focus from the current window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Removes focus from the current window. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:clearInterval"><apiName>clearInterval</apiName><shortdesc> Clears a timer set with setInterval() </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>intervalId</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Clears a timer set with setInterval() </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:clearTimeout"><apiName>clearTimeout</apiName><shortdesc> Clears a timer set with setTimeout() </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>timeoutId</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Clears a timer set with setTimeout() </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:close"><apiName>close</apiName><shortdesc> Closes the current window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Closes the current window. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:confirm"><apiName>confirm</apiName><shortdesc> Displays a dialog box with a message and an OK and a Cancel button.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Displays a dialog box with a message and an OK and a Cancel button. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:focus"><apiName>focus</apiName><shortdesc> Sets focus to the current window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Sets focus to the current window. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:moveBy"><apiName>moveBy</apiName><shortdesc> Moves a window relative to its current position.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Moves a window relative to its current position. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:moveTo"><apiName>moveTo</apiName><shortdesc> Moves a window to the specified position.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Moves a window to the specified position. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:open"><apiName>open</apiName><shortdesc>
		 Opens a new browser window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:Window</apiOperationClassifier></apiReturn><apiParam><apiItemName>URL</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Specifies the URL of the page to open. If no URL is specified, a new window with about:blank is opened
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Specifies the target attribute or the name of the window. The following values are supported:
		 				"_blank" - URL is loaded into a new window. This is default
		 				"_parent" - URL is loaded into the parent frame
		 				"_self" - URL replaces the current page
		 				"_top" - URL replaces any framesets that may be loaded
		 				name - The name of the window 
		 </apiDesc></apiParam><apiParam><apiItemName>specs</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>replace</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
		 Opens a new browser window.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:print"><apiName>print</apiName><shortdesc> Prints the content of the current window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Prints the content of the current window. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:prompt"><apiName>prompt</apiName><shortdesc> Displays a dialog box that prompts the visitor for input.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>defaultText</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Displays a dialog box that prompts the visitor for input. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:resizeBy"><apiName>resizeBy</apiName><shortdesc> Resizes the window by the specified pixels.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Resizes the window by the specified pixels. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:resizeTo"><apiName>resizeTo</apiName><shortdesc> Resizes the window to the specified width and height.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Resizes the window to the specified width and height. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:scrollBy"><apiName>scrollBy</apiName><shortdesc> Scrolls the content by the specified number of pixels.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Scrolls the content by the specified number of pixels. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:scrollTo"><apiName>scrollTo</apiName><shortdesc> Scrolls the content to the specified coordinates.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Scrolls the content to the specified coordinates. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:setInterval"><apiName>setInterval</apiName><shortdesc> Calls a public function or evaluates an expression at specified intervals (in milliseconds).</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>milliseconds</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Calls a public function or evaluates an expression at specified intervals (in milliseconds). </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Window:setTimeout"><apiName>setTimeout</apiName><shortdesc> Calls a public function or evaluates an expression after a specified number of milliseconds.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>milliseconds</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Calls a public function or evaluates an expression after a specified number of milliseconds. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:Window:closed:get"><apiName>closed</apiName><shortdesc> Returns a Boolean value indicating whether a window has been closed or not.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Returns a Boolean value indicating whether a window has been closed or not. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:defaultStatus:get"><apiName>defaultStatus</apiName><shortdesc> Sets or returns the default text in the statusbar of a window </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the default text in the statusbar of a window </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:document:get"><apiName>document</apiName><shortdesc> Returns the Document object for the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Document</apiValueClassifier></apiValueDef><apiDesc> Returns the Document object for the window. (See Document object) </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:event:get"><apiName>event</apiName><shortdesc> IE: event object because normal events aren't passed to eventhandlers like they should.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Event</apiValueClassifier></apiValueDef><apiDesc> IE: event object because normal events aren't passed to eventhandlers like they should. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:frames:get"><apiName>frames</apiName><shortdesc> Returns an array of all the frames (including iframes) in the current window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> Returns an array of all the frames (including iframes) in the current window. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:history:get"><apiName>history</apiName><shortdesc> Returns the History object for the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:History</apiValueClassifier></apiValueDef><apiDesc> Returns the History object for the window. (See History object) </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:innerHeight:get"><apiName>innerHeight</apiName><shortdesc> FF: Sets or returns the inner height of a window's content area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> FF: Sets or returns the inner height of a window's content area. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:innerWidth:get"><apiName>innerWidth</apiName><shortdesc> FF: Sets or returns the inner width of a window's content area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> FF: Sets or returns the inner width of a window's content area. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:length:get"><apiName>length</apiName><shortdesc> Returns the number of frames (including iframes) in a window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the number of frames (including iframes) in a window. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:location:get"><apiName>location</apiName><shortdesc> Returns the Location object for the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Location</apiValueClassifier></apiValueDef><apiDesc> Returns the Location object for the window. (See Location object) </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:name:get"><apiName>name</apiName><shortdesc> Sets or returns the name of a window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the name of a window. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:navigator:get"><apiName>navigator</apiName><shortdesc> Returns the Navigator object for the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Navigator</apiValueClassifier></apiValueDef><apiDesc> Returns the Navigator object for the window. (See Navigator object) </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:onbeforeunload:get"><apiName>onbeforeunload</apiName><shortdesc> Fires when the page is about to be unloaded, prior to window.onunload event firing.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Fires when the page is about to be unloaded, prior to window.onunload event firing. Supported in all modern browsers. By setting event.returnValue to a string, the browser will prompt the user whether he/she wants to leave the current page when attempting to: </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:onblur:get"><apiName>onblur</apiName><shortdesc> Fires when the window loses focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Fires when the window loses focus. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:onerror:get"><apiName>onerror</apiName><shortdesc> Fires when a JavaScript error occurs.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Fires when a JavaScript error occurs. By returning true inside this event, JavaScript errors on the page (if any) are suppressed, with no error messages popping up. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:onload:get"><apiName>onload</apiName><shortdesc> Script to be run immediately after a the page, image or frame is loaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Script to be run immediately after a the page, image or frame is loaded. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:onresize:get"><apiName>onresize</apiName><shortdesc> Fires when the window is resized.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Fires when the window is resized. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:onscroll:get"><apiName>onscroll</apiName><shortdesc> Fires when the window is scrolled.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Fires when the window is scrolled. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:onunload:get"><apiName>onunload</apiName><shortdesc> Fires when the page is unloaded- process cannot be overruled at this point.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Fires when the page is unloaded- process cannot be overruled at this point. Often used to run code cleanup routines. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:opener:get"><apiName>opener</apiName><shortdesc> Returns a reference to the window that created the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Window</apiValueClassifier></apiValueDef><apiDesc> Returns a reference to the window that created the window. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:outerHeight:get"><apiName>outerHeight</apiName><shortdesc> FF: Sets or returns the outer height of a window, including toolbars/scrollbars.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> FF: Sets or returns the outer height of a window, including toolbars/scrollbars. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:outerWidth:get"><apiName>outerWidth</apiName><shortdesc> FF: Sets or returns the outer width of a window, including toolbars/scrollbars.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> FF: Sets or returns the outer width of a window, including toolbars/scrollbars. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:pageXOffset:get"><apiName>pageXOffset</apiName><shortdesc> FF&amp;amp;Opera&amp;amp;Chrome&amp;amp;Safari: Returns the pixels the current document has been scrolled (horizontally) from the upper left corner of the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> FF&amp;Opera&amp;Chrome&amp;Safari: Returns the pixels the current document has been scrolled (horizontally) from the upper left corner of the window. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:pageYOffset:get"><apiName>pageYOffset</apiName><shortdesc> FF&amp;amp;Opera&amp;amp;Chrome&amp;amp;Safari: Returns the pixels the current document has been scrolled (vertically) from the upper left corner of the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> FF&amp;Opera&amp;Chrome&amp;Safari: Returns the pixels the current document has been scrolled (vertically) from the upper left corner of the window. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:parent:get"><apiName>parent</apiName><shortdesc> Returns the parent window of the current window </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Window</apiValueClassifier></apiValueDef><apiDesc> Returns the parent window of the current window </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:screenLeft:get"><apiName>screenLeft</apiName><shortdesc> IE&amp;amp;Opera&amp;amp;Safari: Returns the x coordinate of the window relative to the screen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> IE&amp;Opera&amp;Safari: Returns the x coordinate of the window relative to the screen. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:screenTop:get"><apiName>screenTop</apiName><shortdesc> IE&amp;amp;Opera&amp;amp;Safari: Returns the y coordinate of the window relative to the screen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> IE&amp;Opera&amp;Safari: Returns the y coordinate of the window relative to the screen. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:screenX:get"><apiName>screenX</apiName><shortdesc> FF&amp;amp;Opera&amp;amp;Safari: Returns the x coordinate of the window relative to the screen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> FF&amp;Opera&amp;Safari: Returns the x coordinate of the window relative to the screen. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:screenY:get"><apiName>screenY</apiName><shortdesc> FF&amp;amp;Opera&amp;amp;Safari: Returns the y coordinate of the window relative to the screen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> FF&amp;Opera&amp;Safari: Returns the y coordinate of the window relative to the screen. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:screen:get"><apiName>screen</apiName><shortdesc> Returns the Screen object for the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Screen</apiValueClassifier></apiValueDef><apiDesc> Returns the Screen object for the window. (See Screen object) </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:self:get"><apiName>self</apiName><shortdesc> Returns the current window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Window</apiValueClassifier></apiValueDef><apiDesc> Returns the current window. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:status:get"><apiName>status</apiName><shortdesc> Sets and returns the text in the statusbar of a window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the text in the statusbar of a window. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Window:top:get"><apiName>top</apiName><shortdesc> Returns the topmost browser window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Window</apiValueClassifier></apiValueDef><apiDesc> Returns the topmost browser window. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLSelectElement"><apiName>HTMLSelectElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="dom.domobjects:HTMLSelectElement:add"><apiName>add</apiName><shortdesc> 
		 Adds an option to a dropdown list.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>option</apiItemName><apiOperationClassifier>dom.domobjects:HTMLOptionElement</apiOperationClassifier></apiParam><apiParam><apiItemName>before</apiItemName><apiType value="any"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc> 
		 Adds an option to a dropdown list. 
		 
		 IE:
		 leave out before param to add to end
		 if you want to add at a specific location use the index where to insert before.
		 
		 Standards-compliant:
		 let before == null to add to end
		 if you want to add at a specific location use the Option object you wish to add before as before.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLSelectElement:remove"><apiName>remove</apiName><shortdesc> Removes an option from a dropdown list.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Removes an option from a dropdown list. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:HTMLSelectElement:form:get"><apiName>form</apiName><shortdesc> Returns a reference to the form that contains the dropdown list.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc> Returns a reference to the form that contains the dropdown list. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLSelectElement:length:get"><apiName>length</apiName><shortdesc> Returns the number of options in a dropdown list.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the number of options in a dropdown list. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLSelectElement:multiple:get"><apiName>multiple</apiName><shortdesc> Sets or returns whether or not multiple items can be selected.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Sets or returns whether or not multiple items can be selected. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLSelectElement:options:get"><apiName>options</apiName><shortdesc> Returns an array of all the options in a dropdown list.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> Returns an array of all the options in a dropdown list. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLSelectElement:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc> Sets or returns the index of the selected option in a dropdown list.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Sets or returns the index of the selected option in a dropdown list. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLSelectElement:size:get"><apiName>size</apiName><shortdesc> Sets or returns the number of visible rows in a dropdown list.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Sets or returns the number of visible rows in a dropdown list. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLSelectElement:type:get"><apiName>type</apiName><shortdesc> Returns the type of form element a dropdown list is.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Returns the type of form element a dropdown list is. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLInputElement"><apiName>HTMLInputElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLInputElement:alt:get"><apiName>alt</apiName><shortdesc> Sets or returns an alternate text to display if a browser does not support this input.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns an alternate text to display if a browser does not support this input. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLInputElement:form:get"><apiName>form</apiName><shortdesc> Returns a reference to the form that contains the input.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc> Returns a reference to the form that contains the input. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLInputElement:onchange:get"><apiName>onchange</apiName><shortdesc> The content of a field changes.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> The content of a field changes. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLInputElement:type:get"><apiName>type</apiName><shortdesc> Returns the type of form element an input is.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Returns the type of form element an input is. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLInputElement:value:get"><apiName>value</apiName><shortdesc> Sets or returns the text that is displayed on the input.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the text that is displayed on the input. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:Screen"><apiName>Screen</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="dom.domobjects:Screen:Screen"><apiName>Screen</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_</apiItemName><apiType value="Screen.as$16:_$"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="dom.domobjects:Screen:availHeight:get"><apiName>availHeight</apiName><shortdesc> Returns the height of the screen (excluding the Windows Taskbar).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the height of the screen (excluding the Windows Taskbar). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Screen:availWidth:get"><apiName>availWidth</apiName><shortdesc> Returns the width of the screen (excluding the Windows Taskbar).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the width of the screen (excluding the Windows Taskbar). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Screen:colorDepth:get"><apiName>colorDepth</apiName><shortdesc> Returns the bit depth of the color palette for displaying images.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the bit depth of the color palette for displaying images. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Screen:height:get"><apiName>height</apiName><shortdesc> Returns the total height of the screen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the total height of the screen. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Screen:width:get"><apiName>width</apiName><shortdesc> Returns the total width of the screen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the total width of the screen. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLAnchorElement"><apiName>HTMLAnchorElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLAnchorElement:charset:get"><apiName>charset</apiName><shortdesc> Sets or returns the value of the charset attribute of a link.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the charset attribute of a link. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAnchorElement:href:get"><apiName>href</apiName><shortdesc> Sets or returns the value of the href attribute of a link.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the href attribute of a link. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAnchorElement:hreflang:get"><apiName>hreflang</apiName><shortdesc> Sets or returns the value of the hreflang attribute of a link.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the hreflang attribute of a link. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAnchorElement:rel:get"><apiName>rel</apiName><shortdesc> Sets or returns the value of the rel attribute of a link.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the rel attribute of a link. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAnchorElement:rev:get"><apiName>rev</apiName><shortdesc> Sets or returns the value of the rev attribute of a link.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the rev attribute of a link. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAnchorElement:target:get"><apiName>target</apiName><shortdesc> Sets or returns the value of the target attribute of a link.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the target attribute of a link. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLAnchorElement:type:get"><apiName>type</apiName><shortdesc> Sets or returns the value of the type attribute of a link.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the type attribute of a link. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLFramesetElement"><apiName>HTMLFramesetElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLFramesetElement:cols:get"><apiName>cols</apiName><shortdesc> Sets or returns the value of the cols attribute in a frameset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the cols attribute in a frameset. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFramesetElement:onload:get"><apiName>onload</apiName><shortdesc> Script to be run immediately after a the page, image or frame is loaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Script to be run immediately after a the page, image or frame is loaded. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLFramesetElement:rows:get"><apiName>rows</apiName><shortdesc> Sets or returns the value of the rows attribute in a frameset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the rows attribute in a frameset. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:Document"><apiName>Document</apiName><shortdesc>
	 Reference: 
	 http://www.w3schools.com/jsref/dom_obj_document.asp
	 http://www.javascriptkit.com/jsref/
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:DOMBase</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Reference: 
	 http://www.w3schools.com/jsref/dom_obj_document.asp
	 http://www.javascriptkit.com/jsref/
	 </apiDesc></apiClassifierDetail><apiConstructor id="dom.domobjects:Document:Document"><apiName>Document</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_</apiItemName><apiType value="Document.as$27:$"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="dom.domobjects:Document:close"><apiName>close</apiName><shortdesc> W3C: Closes the output stream previously opened with document.open() </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> W3C: Closes the output stream previously opened with document.open() </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Document:createAttribute"><apiName>createAttribute</apiName><shortdesc> Create a new attribute with the given name.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:Attribute</apiOperationClassifier></apiReturn><apiParam><apiItemName>attributename</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Create a new attribute with the given name. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Document:createComment"><apiName>createComment</apiName><shortdesc> Create a new comment node with the given content.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:Comment</apiOperationClassifier></apiReturn><apiParam><apiItemName>comment</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Create a new comment node with the given content. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Document:createDocumentFragment"><apiName>createDocumentFragment</apiName><shortdesc> Creates an empty document fragment.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Creates an empty document fragment. The result is a temporary container for creating and modifying new elements or attributes before introducing the final result to your document tree. This is a very useful method when you're performing multiple operations that add to or modify the document tree. Instead of directly modifying the document tree each time (very inefficient), it's much better to use a temporary "whiteboard" that is created by createDocumentFragment() to perform all your operations on first before finally inserting the result to the document tree. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Document:createElement"><apiName>createElement</apiName><shortdesc> Create a new HTMLElement with the given tagname.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>tagname</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Create a new HTMLElement with the given tagname. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Document:getElementById"><apiName>getElementById</apiName><shortdesc> W3C: Accesses the first element with the specified id.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> W3C: Accesses the first element with the specified id. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Document:getElementsByName"><apiName>getElementsByName</apiName><shortdesc> W3C: Accesses all elements with a specified name.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> W3C: Accesses all elements with a specified name. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Document:getElementsByTagName"><apiName>getElementsByTagName</apiName><shortdesc> W3C: Accesses all elements with a specified tagname.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn><apiParam><apiItemName>tagname</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> W3C: Accesses all elements with a specified tagname. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Document:open"><apiName>open</apiName><shortdesc> W3C: Opens an output stream to collect the output from document.write() or document.writeln() </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:Document</apiOperationClassifier></apiReturn><apiParam><apiItemName>mimetype</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>replace</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc> W3C: Opens an output stream to collect the output from document.write() or document.writeln() </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Document:write"><apiName>write</apiName><shortdesc> Writes HTML expressions or JavaScript code to a document.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef><apiDesc> Writes HTML expressions or JavaScript code to a document. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Document:writeln"><apiName>writeln</apiName><shortdesc> Writes HTML expressions or JavaScript code to a document followed by a newline.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef><apiDesc> Writes HTML expressions or JavaScript code to a document followed by a newline. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:Document:URL:get"><apiName>URL</apiName><shortdesc> W3C: Returns the full URL of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Returns the full URL of the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:alinkColor:get"><apiName>alinkColor</apiName><shortdesc> Specifies the alink color of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Specifies the alink color of the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:anchors:get"><apiName>anchors</apiName><shortdesc> W3C: Returns an array of all the anchors in the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> W3C: Returns an array of all the anchors in the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:applets:get"><apiName>applets</apiName><shortdesc> W3C: Returns an array of all the applets in the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> W3C: Returns an array of all the applets in the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:bgColor:get"><apiName>bgColor</apiName><shortdesc> Specifies the background color of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Specifies the background color of the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:body:get"><apiName>body</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLBodyElement</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:cookie:get"><apiName>cookie</apiName><shortdesc> W3C: Returns all name/value pairs of cookies in the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Returns all name/value pairs of cookies in the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:documentElement:get"><apiName>documentElement</apiName><shortdesc> References the root element of the document, in the case of HTML documents, the html element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLElement</apiValueClassifier></apiValueDef><apiDesc> References the root element of the document, in the case of HTML documents, the html element. This read only property is useful for accessing all elements on the page, such as the HEAD. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:documentMode:get"><apiName>documentMode</apiName><shortdesc> 
		 IE8: Returns the mode used by the browser to render the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		 IE8: Returns the mode used by the browser to render the document.
		 
		 Values: 
		 5 - The page is displayed in IE5 mode
		 7 - The page is displayed in IE7 mode
		 8 - The page is displayed in IE8 mode
		 
		 Note: If no !DOCTYPE is specified, IE8 renders the page in IE5 mode!
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:domain:get"><apiName>domain</apiName><shortdesc> W3C: Returns the domain name of the server that loaded the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Returns the domain name of the server that loaded the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:embeds:get"><apiName>embeds</apiName><shortdesc> W3C: Returns an array of all the embeds in the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> W3C: Returns an array of all the embeds in the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:fgColor:get"><apiName>fgColor</apiName><shortdesc> Specifies the foreground color of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Specifies the foreground color of the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:forms:get"><apiName>forms</apiName><shortdesc> W3C: Returns an array of all the forms in the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> W3C: Returns an array of all the forms in the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:images:get"><apiName>images</apiName><shortdesc> W3C: Returns an array of all the images in the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> W3C: Returns an array of all the images in the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:linkColor:get"><apiName>linkColor</apiName><shortdesc> Specifies the link color of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Specifies the link color of the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:links:get"><apiName>links</apiName><shortdesc> W3C: Returns an array of all the links in the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> W3C: Returns an array of all the links in the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:location:get"><apiName>location</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Location</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:onerror:get"><apiName>onerror</apiName><shortdesc> An error occurs when loading a document or an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> An error occurs when loading a document or an image. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:plugins:get"><apiName>plugins</apiName><shortdesc> W3C: Returns an array of all the plugins in the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> W3C: Returns an array of all the plugins in the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:readyState:get"><apiName>readyState</apiName><shortdesc> 
		 IE&amp;amp;Opera&amp;amp;Chrome&amp;amp;Safari: Returns the (loading) status of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> 
		 IE&amp;Opera&amp;Chrome&amp;Safari: Returns the (loading) status of the document.
		 
		 Values:
		 uninitialized - Has not started loading yet
		 loading - Is loading
		 interactive - Has loaded enough and the user can interact with it
		 complete - Fully loaded
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:referrer:get"><apiName>referrer</apiName><shortdesc> W3C: Returns the URL of the document that loaded the current document </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Returns the URL of the document that loaded the current document </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:styleSheets:get"><apiName>styleSheets</apiName><shortdesc> An array referencing all CSSStylesheet objects on the page, whether they are defined using the &amp;lt;style /&amp;gt; or &amp;lt;link /&amp;gt; tag.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> An array referencing all CSSStylesheet objects on the page, whether they are defined using the &lt;style /&gt; or &lt;link /&gt; tag. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:title:get"><apiName>title</apiName><shortdesc> W3C: Sets or returns the title of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Sets or returns the title of the document. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Document:vlinkColor:get"><apiName>vlinkColor</apiName><shortdesc> Specifies the link color of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Specifies the link color of the document. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLTextAreaElement"><apiName>HTMLTextAreaElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLInputElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="dom.domobjects:HTMLTextAreaElement:select"><apiName>select</apiName><shortdesc> Selects the text in a textarea.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Selects the text in a textarea. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:HTMLTextAreaElement:cols:get"><apiName>cols</apiName><shortdesc> Sets or returns the width of a textarea.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Sets or returns the width of a textarea. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTextAreaElement:defaultValue:get"><apiName>defaultValue</apiName><shortdesc> Sets or returns the default text in a textarea.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the default text in a textarea. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTextAreaElement:onselect:get"><apiName>onselect</apiName><shortdesc> Text is selected.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Text is selected. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTextAreaElement:readOnly:get"><apiName>readOnly</apiName><shortdesc> Sets or returns whether or not a textarea should be read-only.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Sets or returns whether or not a textarea should be read-only. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTextAreaElement:rows:get"><apiName>rows</apiName><shortdesc> Sets or returns the height of a textarea.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Sets or returns the height of a textarea. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLBodyElement"><apiName>HTMLBodyElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLBodyElement:aLink:get"><apiName>aLink</apiName><shortdesc> Sets or returns the value of the alink attribute of the body element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the alink attribute of the body element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLBodyElement:background:get"><apiName>background</apiName><shortdesc> Sets or returns the value of the background attribute of the body element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the background attribute of the body element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLBodyElement:bgColor:get"><apiName>bgColor</apiName><shortdesc> Sets or returns the value of the bgcolor attribute of the body element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the bgcolor attribute of the body element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLBodyElement:link:get"><apiName>link</apiName><shortdesc> Sets or returns the value of the link attribute of the body element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the link attribute of the body element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLBodyElement:onerror:get"><apiName>onerror</apiName><shortdesc> An error occurs when loading a document or an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> An error occurs when loading a document or an image. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLBodyElement:onload:get"><apiName>onload</apiName><shortdesc> Script to be run immediately after a the page, image or frame is loaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Script to be run immediately after a the page, image or frame is loaded. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLBodyElement:text:get"><apiName>text</apiName><shortdesc> Sets or returns the value of the text attribute of the body element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the text attribute of the body element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLBodyElement:vLink:get"><apiName>vLink</apiName><shortdesc> Sets or returns the value of the vlink attribute of the body element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the vlink attribute of the body element. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:TextMetrics"><apiName>TextMetrics</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="dom.domobjects:TextMetrics:TextMetrics"><apiName>TextMetrics</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="dom.domobjects:TextMetrics:width:get"><apiName>width</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:Event"><apiName>Event</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="dom.domobjects:Event:fromElement"><apiName>fromElement</apiName><shortdesc> IE: or mouseover and mouseout events, these properties indicate the elements the mouse is leaving from and moving into, respectively.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> IE: or mouseover and mouseout events, these properties indicate the elements the mouse is leaving from and moving into, respectively. The W3C/ Firefox event model uses a different property, "relatedTarget", instead, that simply returns the corresponding element based on the event type (mouseover or mouseout). </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Event:preventDefault"><apiName>preventDefault</apiName><shortdesc> Not in IE: Call to cancel any default action associated with the event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Not in IE: Call to cancel any default action associated with the event. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Event:stopPropagation"><apiName>stopPropagation</apiName><shortdesc> Not in IE: Cancel bubbling of event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Not in IE: Cancel bubbling of event. In IE use cancelBubble instead. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Event:toElement"><apiName>toElement</apiName><shortdesc> IE: or mouseover and mouseout events, these properties indicate the elements the mouse is leaving from and moving into, respectively.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> IE: or mouseover and mouseout events, these properties indicate the elements the mouse is leaving from and moving into, respectively. The W3C/ Firefox event model uses a different property, "relatedTarget", instead, that simply returns the corresponding element based on the event type (mouseover or mouseout). </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:Event:altKey:get"><apiName>altKey</apiName><shortdesc> Returns whether or not the "ALT" key was pressed when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Returns whether or not the "ALT" key was pressed when an event was triggered. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:bubbles:get"><apiName>bubbles</apiName><shortdesc> Not in IE: Returns a Boolean value that indicates whether or not an event is a bubbling event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Not in IE: Returns a Boolean value that indicates whether or not an event is a bubbling event. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:button:get"><apiName>button</apiName><shortdesc> Returns which mouse button was clicked when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns which mouse button was clicked when an event was triggered. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:cancelBubble:get"><apiName>cancelBubble</apiName><shortdesc> IE: Set to true to prevent the event from bubbling.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> IE: Set to true to prevent the event from bubbling. In non IE browsers, use e.stopPropagation() instead. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:cancelable:get"><apiName>cancelable</apiName><shortdesc> Not in IE: Returns a Boolean value that indicates whether or not an event can have its default action prevented.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Not in IE: Returns a Boolean value that indicates whether or not an event can have its default action prevented. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:charCode:get"><apiName>charCode</apiName><shortdesc> Not in IE: Property indicating the Unicode for the key pressed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Not in IE: Property indicating the Unicode for the key pressed. Use String.fromCharCode(charCode) to convert code to string. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:clientX:get"><apiName>clientX</apiName><shortdesc> Returns the horizontal coordinate of the mouse pointer when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the horizontal coordinate of the mouse pointer when an event was triggered. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:clientY:get"><apiName>clientY</apiName><shortdesc> Returns the vertical coordinate of the mouse pointer when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the vertical coordinate of the mouse pointer when an event was triggered. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:ctrlKey:get"><apiName>ctrlKey</apiName><shortdesc> Returns whether or not the "CTRL" key was pressed when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Returns whether or not the "CTRL" key was pressed when an event was triggered. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:keyCode:get"><apiName>keyCode</apiName><shortdesc> IE: Property indicating the Unicode for the key pressed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> IE: Property indicating the Unicode for the key pressed. Use String.fromCharCode(keyCode) to convert code to string. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:layerX:get"><apiName>layerX</apiName><shortdesc> Not in IE: Returns the horizontal coordinate of the mouse pointer relative to the element when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Not in IE: Returns the horizontal coordinate of the mouse pointer relative to the element when an event was triggered. User offsetX for IE. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:layerY:get"><apiName>layerY</apiName><shortdesc> Not in IE: Returns the vertical coordinate of the mouse pointer relative to the element when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Not in IE: Returns the vertical coordinate of the mouse pointer relative to the element when an event was triggered. Use offsetY for IE. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:metaKey:get"><apiName>metaKey</apiName><shortdesc> Returns whether or not the "meta" key was pressed when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Returns whether or not the "meta" key was pressed when an event was triggered. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:offsetX:get"><apiName>offsetX</apiName><shortdesc> IE: Returns the horizontal coordinate of the mouse pointer relative to the element when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> IE: Returns the horizontal coordinate of the mouse pointer relative to the element when an event was triggered. User layerX for compliant browsers. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:offsetY:get"><apiName>offsetY</apiName><shortdesc> IE: Returns the vertical coordinate of the mouse pointer relative to the element when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> IE: Returns the vertical coordinate of the mouse pointer relative to the element when an event was triggered. Use layerY for compliant browsers. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:relatedTarget:get"><apiName>relatedTarget</apiName><shortdesc> Returns the element related to the element that triggered the event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLElement</apiValueClassifier></apiValueDef><apiDesc> Returns the element related to the element that triggered the event. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:returnValue:get"><apiName>returnValue</apiName><shortdesc> IE: Set to false to cancel any default action associated with the event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> IE: Set to false to cancel any default action associated with the event. In W3C/Firefox browsers, call the function e.preventDefault() instead. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:shiftKey:get"><apiName>shiftKey</apiName><shortdesc> Returns whether or not the "SHIFT" key was pressed when an event was triggered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Returns whether or not the "SHIFT" key was pressed when an event was triggered. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:srcElement:get"><apiName>srcElement</apiName><shortdesc> IE: Returns the element whose event listeners triggered the event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLElement</apiValueClassifier></apiValueDef><apiDesc> IE: Returns the element whose event listeners triggered the event. Use target for compliant browsers. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:target:get"><apiName>target</apiName><shortdesc> Not in IE: Returns the element that triggered the event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLElement</apiValueClassifier></apiValueDef><apiDesc> Not in IE: Returns the element that triggered the event. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Event:type:get"><apiName>type</apiName><shortdesc> Returns the name of the event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Returns the name of the event. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:Comment"><apiName>Comment</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="dom.domobjects:HTMLTableTHeadElement"><apiName>HTMLTableTHeadElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="dom.domobjects:HTMLCanvasElement"><apiName>HTMLCanvasElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="dom.domobjects:HTMLCanvasElement:HTMLCanvasElement"><apiName>HTMLCanvasElement</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="dom.domobjects:HTMLCanvasElement:getContext"><apiName>getContext</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>contextID</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLCanvasElement:toDataURL"><apiName>toDataURL</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="dom.domobjects:Location"><apiName>Location</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="dom.domobjects:Location:assign"><apiName>assign</apiName><shortdesc> Loads a new document.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Loads a new document. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Location:reload"><apiName>reload</apiName><shortdesc> Reloads the current document.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Reloads the current document. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:Location:replace"><apiName>replace</apiName><shortdesc> Replaces the current document with a new one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Replaces the current document with a new one. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:Location:hash:get"><apiName>hash</apiName><shortdesc> Sets and returns the anchor portion of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the anchor portion of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Location:host:get"><apiName>host</apiName><shortdesc> Sets and returns the hostname and port of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the hostname and port of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Location:hostname:get"><apiName>hostname</apiName><shortdesc> Sets and returns the hostname of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the hostname of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Location:href:get"><apiName>href</apiName><shortdesc> Sets and returns the entire URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the entire URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Location:pathname:get"><apiName>pathname</apiName><shortdesc> Sets and returns the path name of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the path name of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Location:port:get"><apiName>port</apiName><shortdesc> Sets and returns the port number the server uses for a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the port number the server uses for a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Location:protocol:get"><apiName>protocol</apiName><shortdesc> Sets and returns the protocol of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the protocol of a URL. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Location:search:get"><apiName>search</apiName><shortdesc> Sets and returns the query portion of a URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets and returns the query portion of a URL. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLIFrameElement"><apiName>HTMLIFrameElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLFrameElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="dom.domobjects:HTMLElement"><apiName>HTMLElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>dom.domobjects:DOMBase</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="dom.domobjects:HTMLElement:appendChild"><apiName>appendChild</apiName><shortdesc> W3C: Adds a new child element to the end of the list of children of the element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> W3C: Adds a new child element to the end of the list of children of the element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:blur"><apiName>blur</apiName><shortdesc> W3C: Removes focus from an element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> W3C: Removes focus from an element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:click"><apiName>click</apiName><shortdesc> W3C: Executes a click on an element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> W3C: Executes a click on an element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:cloneNode"><apiName>cloneNode</apiName><shortdesc> W3C: Clones an element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> W3C: Clones an element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:focus"><apiName>focus</apiName><shortdesc> W3C: Gives focus to an element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> W3C: Gives focus to an element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:getAttributeNS"><apiName>getAttributeNS</apiName><shortdesc> Returns the value of the attribute with the given local name and namespace.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>ns</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>localname</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Returns the value of the attribute with the given local name and namespace. Applicable in XML documents. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:getAttributeNodeNS"><apiName>getAttributeNodeNS</apiName><shortdesc> Returns/references the attribute of the current element with the given local name and namespace.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:Attribute</apiOperationClassifier></apiReturn><apiParam><apiItemName>ns</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>localname</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Returns/references the attribute of the current element with the given local name and namespace. Applicable in XML documents. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:getAttributeNode"><apiName>getAttributeNode</apiName><shortdesc> Returns/references the attribute of the current element as a stand only node (not part of document tree).</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:Attribute</apiOperationClassifier></apiReturn><apiParam><apiItemName>attribute</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Returns/references the attribute of the current element as a stand only node (not part of document tree). </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:getAttribute"><apiName>getAttribute</apiName><shortdesc> W3C: Returns the value of an attribute.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>attribute</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> W3C: Returns the value of an attribute. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:getElementsByTagName"><apiName>getElementsByTagName</apiName><shortdesc> W3C: Accessess all elements with a specified tagname.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn><apiParam><apiItemName>tagname</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> W3C: Accessess all elements with a specified tagname. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:hasAttributeNS"><apiName>hasAttributeNS</apiName><shortdesc> Returns a Boolean value indicating whether the current element contains an attribute with the given local name and namespace.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>ns</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>attribute</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Returns a Boolean value indicating whether the current element contains an attribute with the given local name and namespace. Applicable in XML documents. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:hasAttribute"><apiName>hasAttribute</apiName><shortdesc> Returns a Boolean value indicating whether the current element contains an attribute (ie: "align").</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>attribute</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Returns a Boolean value indicating whether the current element contains an attribute (ie: "align"). </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:hasAttributes"><apiName>hasAttributes</apiName><shortdesc> Returns a Boolean value indicating whether the current element has any explicit attributes defined.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> Returns a Boolean value indicating whether the current element has any explicit attributes defined. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:hasChildNodes"><apiName>hasChildNodes</apiName><shortdesc> W3C: Returns whether an element has any child elements.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> W3C: Returns whether an element has any child elements. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:insertAfter"><apiName>insertAfter</apiName><shortdesc> W3C: Inserts a new child element after an existing child element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newchild</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiParam><apiParam><apiItemName>aftertarget</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> W3C: Inserts a new child element after an existing child element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:insertBefore"><apiName>insertBefore</apiName><shortdesc> W3C: Inserts a new child element before an existing child element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newchild</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiParam><apiParam><apiItemName>beforetarget</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> W3C: Inserts a new child element before an existing child element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:item"><apiName>item</apiName><shortdesc> W3C: Returns an element based on its index within the document tree.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> W3C: Returns an element based on its index within the document tree. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:normalize"><apiName>normalize</apiName><shortdesc> W3C: Puts all text nodes underneath this element (including attributes) into a "normal" form where only structure (e.g., elements, comments, processing instructions, CDATA sections, and entity references) separates Text nodes, i.e., there are neither adjacent Text nodes nor empty Text nodes.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> W3C: Puts all text nodes underneath this element (including attributes) into a "normal" form where only structure (e.g., elements, comments, processing instructions, CDATA sections, and entity references) separates Text nodes, i.e., there are neither adjacent Text nodes nor empty Text nodes. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:removeAttributeNS"><apiName>removeAttributeNS</apiName><shortdesc> Removes an attribute with the specified namespace and localname.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>ns</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>attribute</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Removes an attribute with the specified namespace and localname. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:removeAttributeNode"><apiName>removeAttributeNode</apiName><shortdesc> W3C: Removes a specified attribute node from an element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>attribute</apiItemName><apiOperationClassifier>dom.domobjects:Attribute</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> W3C: Removes a specified attribute node from an element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:removeAttribute"><apiName>removeAttribute</apiName><shortdesc> W3C: Removes a specified attribute from an element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>attribute</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> W3C: Removes a specified attribute from an element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:removeChild"><apiName>removeChild</apiName><shortdesc> W3C: Removes a child element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> W3C: Removes a child element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:replaceChild"><apiName>replaceChild</apiName><shortdesc> W3C: Replace a child element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newchild</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiParam><apiParam><apiItemName>oldchild</apiItemName><apiOperationClassifier>dom.domobjects:HTMLElement</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> W3C: Replace a child element. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:setAttributeNS"><apiName>setAttributeNS</apiName><shortdesc> Sets or creates an attribute for the current node with the given local name and namespace.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>ns</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>attribute</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc> Sets or creates an attribute for the current node with the given local name and namespace. Applicable in XML documents. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:setAttributeNode"><apiName>setAttributeNode</apiName><shortdesc> Sets or creates an attribute for the current node.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>attribute</apiItemName><apiOperationClassifier>dom.domobjects:Attribute</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> Sets or creates an attribute for the current node. "attributereference" should be a reference to a attribute you wish to insert. If an attribute of the same name (as referenced) already exists on the node, it is replaced with the newly inserted one. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:setAttribute"><apiName>setAttribute</apiName><shortdesc> W3C: Adds a new attribute to an element or sets an existing one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>attribute</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc> W3C: Adds a new attribute to an element or sets an existing one. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLElement:toString"><apiName>toString</apiName><shortdesc> W3C: Converts an element to a string.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> W3C: Converts an element to a string. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:HTMLElement:accesskey:get"><apiName>accesskey</apiName><shortdesc> W3C: Sets or returns an accesskey for an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Sets or returns an accesskey for an element. This accesskey is activated with ALT+key on Windows or CTRL+ALT+key on Mac. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:attributes:get"><apiName>attributes</apiName><shortdesc> W3C: Returns an array of the attributes of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> W3C: Returns an array of the attributes of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:childNodes:get"><apiName>childNodes</apiName><shortdesc> W3C: Returns an array of child nodes for an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> W3C: Returns an array of child nodes for an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:className:get"><apiName>className</apiName><shortdesc> W3C: Sets or returns the class attribute of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Sets or returns the class attribute of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:clientHeight:get"><apiName>clientHeight</apiName><shortdesc> W3C: Returns the viewable height of the content on a page (not including borders, margins, or scrollbars).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> W3C: Returns the viewable height of the content on a page (not including borders, margins, or scrollbars). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:clientWidth:get"><apiName>clientWidth</apiName><shortdesc> W3C: Returns the viewable width of the content on a page (not including borders, margins, or scrollbars).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> W3C: Returns the viewable width of the content on a page (not including borders, margins, or scrollbars). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:dir:get"><apiName>dir</apiName><shortdesc> W3C: Sets or retunrs the text direction of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Sets or retunrs the text direction of an element. Can be either "rtl" or "ltr". </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:disabled:get"><apiName>disabled</apiName><shortdesc> W3C: Sets or returns the disabled attribute of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> W3C: Sets or returns the disabled attribute of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:firstChild:get"><apiName>firstChild</apiName><shortdesc> W3C: Returns the first child of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLElement</apiValueClassifier></apiValueDef><apiDesc> W3C: Returns the first child of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:height:get"><apiName>height</apiName><shortdesc> W3C: Sets or returns the height attribute of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Sets or returns the height attribute of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:id:get"><apiName>id</apiName><shortdesc> W3C: Sets or returns the id of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Sets or returns the id of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:innerHTML:get"><apiName>innerHTML</apiName><shortdesc> W3C: Sets or returns the HTML contents (+text) of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Sets or returns the HTML contents (+text) of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:lang:get"><apiName>lang</apiName><shortdesc> W3C: Sets or returns the language code for an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Sets or returns the language code for an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:lastChild:get"><apiName>lastChild</apiName><shortdesc> W3C: Returns the last child of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLElement</apiValueClassifier></apiValueDef><apiDesc> W3C: Returns the last child of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:localName:get"><apiName>localName</apiName><shortdesc> XML: Returns the name of the node of an XML element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> XML: Returns the name of the node of an XML element. Equivilant to the nodeName property for regular HTML elements. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:name:get"><apiName>name</apiName><shortdesc>
		 W3C: Sets or returns the value of the name attribute of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 W3C: Sets or returns the value of the name attribute of the element. 
		 For a Meta element:
		 Connects the content attribute to a name.
		 Allowed values are: author|description|keywords|generator| revised|others
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:namespaceURI:get"><apiName>namespaceURI</apiName><shortdesc> XML: Returns the URI string assigned to the xmlns attribute of an XML element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> XML: Returns the URI string assigned to the xmlns attribute of an XML element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:nextSibling:get"><apiName>nextSibling</apiName><shortdesc> W3C: Returns the element immediately following an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLElement</apiValueClassifier></apiValueDef><apiDesc> W3C: Returns the element immediately following an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:nodeName:get"><apiName>nodeName</apiName><shortdesc> W3C: Returns the tagname of an element (in uppercase).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Returns the tagname of an element (in uppercase). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:nodeType:get"><apiName>nodeType</apiName><shortdesc>
		 W3C: Returns the type of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 W3C: Returns the type of the element.
		 1	ELEMENT_NODE
		 2	ATTRIBUTE_NODE
		 3	TEXT_NODE
		 4	CDATA_SECTION_NODE
		 5	ENTITY_REFERENCE_NODE
		 6	ENTITY_NODE
		 7	PROCESSING_INSTRUCTION_NODE
		 8	COMMENT_NODE
		 9	DOCUMENT_NODE
		 10	DOCUMENT_TYPE_NODE
		 11	DOCUMENT_FRAGMENT_NODE
		 12	NOTATION_NODE		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:nodeValue:get"><apiName>nodeValue</apiName><shortdesc> W3C: Returns the value of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Returns the value of the element. null if nodeType = 1, the text if nodeType = 3. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:offsetHeight:get"><apiName>offsetHeight</apiName><shortdesc> Non-standard: Returns the height of an element, including borders and padding if any, but not margins.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Non-standard: Returns the height of an element, including borders and padding if any, but not margins. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:offsetLeft:get"><apiName>offsetLeft</apiName><shortdesc> W3C: Returns the horizontal offset position of the current element relative to its offset container.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> W3C: Returns the horizontal offset position of the current element relative to its offset container. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:offsetParent:get"><apiName>offsetParent</apiName><shortdesc> W3C: Returns the offset container of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLElement</apiValueClassifier></apiValueDef><apiDesc> W3C: Returns the offset container of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:offsetTop:get"><apiName>offsetTop</apiName><shortdesc> W3C: Returns the vertical offset position of the current element relative to its offset container.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> W3C: Returns the vertical offset position of the current element relative to its offset container. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:offsetWidth:get"><apiName>offsetWidth</apiName><shortdesc> Non-standard: Returns the width of an element, including borders and padding if any, but not margins.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Non-standard: Returns the width of an element, including borders and padding if any, but not margins. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onblur:get"><apiName>onblur</apiName><shortdesc> W3C: When an element loses focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When an element loses focus. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onclick:get"><apiName>onclick</apiName><shortdesc> W3C: When a mouseclick on an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When a mouseclick on an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:ondblclick:get"><apiName>ondblclick</apiName><shortdesc> W3C: When a mouse-doubleclick on an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When a mouse-doubleclick on an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onfocus:get"><apiName>onfocus</apiName><shortdesc> W3C: When an element gets focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When an element gets focus. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onkeydown:get"><apiName>onkeydown</apiName><shortdesc> W3C: When a keyboard key is pressed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When a keyboard key is pressed. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onkeypress:get"><apiName>onkeypress</apiName><shortdesc> W3C: When a keyboard key is pressed or held down.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When a keyboard key is pressed or held down. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onkeyup:get"><apiName>onkeyup</apiName><shortdesc> W3C: When a keyboard keys is released.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When a keyboard keys is released. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onmousedown:get"><apiName>onmousedown</apiName><shortdesc> W3C: When a mousebutton is pressed on the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When a mousebutton is pressed on the element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onmousemove:get"><apiName>onmousemove</apiName><shortdesc> W3C: When a mouse moves while over the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When a mouse moves while over the element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onmouseout:get"><apiName>onmouseout</apiName><shortdesc> W3C: When the mouse moves out of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When the mouse moves out of the element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onmouseover:get"><apiName>onmouseover</apiName><shortdesc> W3C: When the mouse moves over the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When the mouse moves over the element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onmouseup:get"><apiName>onmouseup</apiName><shortdesc> W3C: When the mousebutton is released on the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When the mousebutton is released on the element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:onresize:get"><apiName>onresize</apiName><shortdesc> W3C: When the element resizes.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> W3C: When the element resizes. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:ownerDocument:get"><apiName>ownerDocument</apiName><shortdesc> W3C: Returns the root element (document object) for an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:Document</apiValueClassifier></apiValueDef><apiDesc> W3C: Returns the root element (document object) for an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:parentNode:get"><apiName>parentNode</apiName><shortdesc> W3C: Returns the parent node of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLElement</apiValueClassifier></apiValueDef><apiDesc> W3C: Returns the parent node of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:previousSibling:get"><apiName>previousSibling</apiName><shortdesc> W3C: Returns the element immediately before an elemen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLElement</apiValueClassifier></apiValueDef><apiDesc> W3C: Returns the element immediately before an elemen. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:scrollHeight:get"><apiName>scrollHeight</apiName><shortdesc> W3C: Returns the entire height of an element (including areas hidden with scrollbars).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> W3C: Returns the entire height of an element (including areas hidden with scrollbars). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:scrollLeft:get"><apiName>scrollLeft</apiName><shortdesc> W3C: Returns the distance between the actual left edge of an element and its left edge currently in view.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> W3C: Returns the distance between the actual left edge of an element and its left edge currently in view. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:scrollTop:get"><apiName>scrollTop</apiName><shortdesc> W3C: Returns the distance between the actual top edge of an element and its top edge currently in view.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> W3C: Returns the distance between the actual top edge of an element and its top edge currently in view. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:scrollWidth:get"><apiName>scrollWidth</apiName><shortdesc> W3C: Returns the entire width of an element (including areas hidden with scrollbars).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> W3C: Returns the entire width of an element (including areas hidden with scrollbars). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:style:get"><apiName>style</apiName><shortdesc> W3C: Returns the style attribute of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc> W3C: Returns the style attribute of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc> W3C: Sets or returns the tab order of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> W3C: Sets or returns the tab order of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:tagName:get"><apiName>tagName</apiName><shortdesc> W3C: Returns the tagname of an element as a string (in uppercase).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Returns the tagname of an element as a string (in uppercase). </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:title:get"><apiName>title</apiName><shortdesc> W3C: Sets or returns the title attribute of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Sets or returns the title attribute of an element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLElement:width:get"><apiName>width</apiName><shortdesc> W3C: Sets or returns the width attribute of an element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> W3C: Sets or returns the width attribute of an element. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLObjectElement"><apiName>HTMLObjectElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects.display:DisplayObject</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLObjectElement:archive:get"><apiName>archive</apiName><shortdesc> Sets or returns a string that can be used to implement your own archive functionality for the object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns a string that can be used to implement your own archive functionality for the object. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLObjectElement:codeBase:get"><apiName>codeBase</apiName><shortdesc> Sets or returns the URL of the component.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the URL of the component. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLObjectElement:codeType:get"><apiName>codeType</apiName><shortdesc> </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLObjectElement:code:get"><apiName>code</apiName><shortdesc> Sets or returns the URL of the file that contains the compiled Java class.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the URL of the file that contains the compiled Java class. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLObjectElement:data:get"><apiName>data</apiName><shortdesc> </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLObjectElement:declare:get"><apiName>declare</apiName><shortdesc> </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLObjectElement:form:get"><apiName>form</apiName><shortdesc> </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc> </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLObjectElement:standby:get"><apiName>standby</apiName><shortdesc> Sets or returns a message when loading the object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns a message when loading the object. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLObjectElement:type:get"><apiName>type</apiName><shortdesc> Sets or returns the content type for data downloaded via the data attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the content type for data downloaded via the data attribute. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLMetaElement"><apiName>HTMLMetaElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:HTMLMetaElement:content:get"><apiName>content</apiName><shortdesc> Sets or returns the value of the content attribute of a &amp;lt;meta /&amp;gt; element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the value of the content attribute of a &lt;meta /&gt; element. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLMetaElement:httpEquiv:get"><apiName>httpEquiv</apiName><shortdesc> 
		 Connects the content attribute to an HTTP header.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> 
		 Connects the content attribute to an HTTP header.
		 Allowed values are: content-type|expires|refresh|set-cookie
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLMetaElement:scheme:get"><apiName>scheme</apiName><shortdesc> Sets or returns the format to be used to interpret the value of the content attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the format to be used to interpret the value of the content attribute. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLTableElement"><apiName>HTMLTableElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="dom.domobjects:HTMLTableElement:createCaption"><apiName>createCaption</apiName><shortdesc> Creates a caption element for a table.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLTableCaptionElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Creates a caption element for a table. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLTableElement:createTFoot"><apiName>createTFoot</apiName><shortdesc> Creates an empty tFoot element in a table.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLTableRowElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Creates an empty tFoot element in a table. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLTableElement:createTHead"><apiName>createTHead</apiName><shortdesc> Creates an empty tHead element in a table.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLTableRowElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Creates an empty tHead element in a table. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLTableElement:deleteCaption"><apiName>deleteCaption</apiName><shortdesc> Deletes the caption element and its content from a table.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Deletes the caption element and its content from a table. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLTableElement:deleteRow"><apiName>deleteRow</apiName><shortdesc> Deletes a row from a table.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Deletes a row from a table. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLTableElement:deleteTFoot"><apiName>deleteTFoot</apiName><shortdesc> Deletes the tFoot element and its content from a table.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Deletes the tFoot element and its content from a table. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLTableElement:deleteTHead"><apiName>deleteTHead</apiName><shortdesc> Deletes the tHead element and its content from a table.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Deletes the tHead element and its content from a table. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLTableElement:insertRow"><apiName>insertRow</apiName><shortdesc> Inserts a new row in a table.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLTableRowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Inserts a new row in a table. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:HTMLTableElement:border:get"><apiName>border</apiName><shortdesc> Sets or returns the width of the table border.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the width of the table border. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:caption:get"><apiName>caption</apiName><shortdesc> Sets or returns the caption of a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.domobjects:HTMLTableCaptionElement</apiValueClassifier></apiValueDef><apiDesc> Sets or returns the caption of a table. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:cellPadding:get"><apiName>cellPadding</apiName><shortdesc> Sets or returns the amount of space between the cell border and cell content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the amount of space between the cell border and cell content. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:cellSpacing:get"><apiName>cellSpacing</apiName><shortdesc> Sets or returns the amount of space between the cells in a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the amount of space between the cells in a table. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:cells:get"><apiName>cells</apiName><shortdesc> Returns an array containing each cell in a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> Returns an array containing each cell in a table. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:frame:get"><apiName>frame</apiName><shortdesc> Sets or returns the outer-borders of a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the outer-borders of a table. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:rows:get"><apiName>rows</apiName><shortdesc> Returns an array containing each row in a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> Returns an array containing each row in a table. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:rules:get"><apiName>rules</apiName><shortdesc> Sets or returns the inner-borders of a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the inner-borders of a table. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:summary:get"><apiName>summary</apiName><shortdesc> Sets or returns a description of a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns a description of a table. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:tBodies:get"><apiName>tBodies</apiName><shortdesc> Returns an array containing each tboady in a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> Returns an array containing each tboady in a table. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:tFoot:get"><apiName>tFoot</apiName><shortdesc> Returns the TFoot object of a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLTableRowElement</apiValueClassifier></apiValueDef><apiDesc> Returns the TFoot object of a table. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableElement:tHead:get"><apiName>tHead</apiName><shortdesc> Returns the THead object of a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:HTMLTableRowElement</apiValueClassifier></apiValueDef><apiDesc> Returns the THead object of a table. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLTableCaptionElement"><apiName>HTMLTableCaptionElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLTableCellElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="dom.domobjects:CSSStyleRule"><apiName>CSSStyleRule</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="dom.domobjects:CSSStyleRule:cssText:get"><apiName>cssText</apiName><shortdesc> Returns the content of a css rule in its entirety, from the selector to the corresponding CSS declaration(s).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Returns the content of a css rule in its entirety, from the selector to the corresponding CSS declaration(s). NS/Firefox only. A useful property to easily search within a rule, by looking at both the selector and attributes of a rule all at once. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleRule:parentStylesheet:get"><apiName>parentStylesheet</apiName><shortdesc> Returns the styleSheet object that contains the current rule.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:CSSStyleSheet</apiValueClassifier></apiValueDef><apiDesc> Returns the styleSheet object that contains the current rule. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleRule:selectorText:get"><apiName>selectorText</apiName><shortdesc> Read/write property that returns the selector part of a rule.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Read/write property that returns the selector part of a rule. Setting this property yields unpredictable results in both Firefox and IE. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleRule:style:get"><apiName>style</apiName><shortdesc> The "style" object of the css rule object provides read/write access to individual attributes defined in the rule, similar in fashion to the "style" object of inline styles.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.domobjects:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc> The "style" object of the css rule object provides read/write access to individual attributes defined in the rule, similar in fashion to the "style" object of inline styles. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:CSSStyleRule:type:get"><apiName>type</apiName><shortdesc> The type of rule (1 == CSSStyleRule) </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> The type of rule (1 == CSSStyleRule) </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:HTMLTableRowElement"><apiName>HTMLTableRowElement</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.domobjects:HTMLElement</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="dom.domobjects:HTMLTableRowElement:deleteCell"><apiName>deleteCell</apiName><shortdesc> Deletes a cell in a table row.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Deletes a cell in a table row. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.domobjects:HTMLTableRowElement:insertCell"><apiName>insertCell</apiName><shortdesc> Inserts a cell in a table row.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:HTMLTableCellElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Inserts a cell in a table row. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:HTMLTableRowElement:align:get"><apiName>align</apiName><shortdesc> Sets or returns the horizontal alignment of data within a table row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the horizontal alignment of data within a table row. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableRowElement:cells:get"><apiName>cells</apiName><shortdesc> Returns an array containing each cell in the table row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc> Returns an array containing each cell in the table row. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableRowElement:chOff:get"><apiName>chOff</apiName><shortdesc> Sets or returns the offset of alignment character for the cells in a table row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the offset of alignment character for the cells in a table row. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableRowElement:ch:get"><apiName>ch</apiName><shortdesc> Sets or returns the alignment character for cells in a table row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the alignment character for cells in a table row. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableRowElement:rowIndex:get"><apiName>rowIndex</apiName><shortdesc> Returns the position of a row in the table''s rows collection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the position of a row in the table''s rows collection. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableRowElement:sectionRowIndex:get"><apiName>sectionRowIndex</apiName><shortdesc> Returns the position of a row in the tBody, tHead, or tFoot rows collection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Returns the position of a row in the tBody, tHead, or tFoot rows collection. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:HTMLTableRowElement:vAlign:get"><apiName>vAlign</apiName><shortdesc> Sets or returns the vertically alignment of data within a table row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Sets or returns the vertically alignment of data within a table row. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.domobjects:CanvasPattern"><apiName>CanvasPattern</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="dom.domobjects:CanvasPattern:CanvasPattern"><apiName>CanvasPattern</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="dom.domobjects:Navigator"><apiName>Navigator</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="dom.domobjects:Navigator:Navigator"><apiName>Navigator</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_</apiItemName><apiType value="Navigator.as$9:_$"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="dom.domobjects:Navigator:javaEnabled"><apiName>javaEnabled</apiName><shortdesc> Specifies whether or not the browser has Java enabled.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> Specifies whether or not the browser has Java enabled. </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.domobjects:Navigator:appCodeName:get"><apiName>appCodeName</apiName><shortdesc> Returns the code name of the browser.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Returns the code name of the browser. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Navigator:appName:get"><apiName>appName</apiName><shortdesc> Returns the name of the browser.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Returns the name of the browser. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Navigator:appVersion:get"><apiName>appVersion</apiName><shortdesc> Returns the version information of the browser.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Returns the version information of the browser. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Navigator:cookieEnabled:get"><apiName>cookieEnabled</apiName><shortdesc> Determines whether cookies are enabled in the browser.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Determines whether cookies are enabled in the browser. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Navigator:platform:get"><apiName>platform</apiName><shortdesc> Returns for which platform the browser is compiled.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Returns for which platform the browser is compiled. </apiDesc></apiValueDetail></apiValue><apiValue id="dom.domobjects:Navigator:userAgent:get"><apiName>userAgent</apiName><shortdesc> Returns the user-agent header sent by the browser to the server.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Returns the user-agent header sent by the browser to the server. </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>
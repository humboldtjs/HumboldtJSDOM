<?xml version="1.0" encoding="UTF-8"?><apiPackage id="dom"><apiName>dom</apiName><apiDetail/><apiOperation id="globalOperation:dom:alert"><apiName>alert</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="globalOperation:dom:dynamicModule"><apiName>dynamicModule</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn><apiParam><apiItemName>aModuleName</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="globalOperation:dom:eval"><apiName>eval</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="globalOperation:dom:eventFunction"><apiName>eventFunction</apiName><shortdesc>
	 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.domobjects:EventFunction</apiOperationClassifier></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="Object"/><apiDesc>The scope in which to execute the function (normally "this")
	 </apiDesc></apiParam><apiParam><apiItemName>f</apiItemName><apiType value="Function"/><apiDesc>The function to bind to the scope
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="globalOperation:dom:hasModule"><apiName>hasModule</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>aModuleName</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="globalOperation:dom:loadModule"><apiName>loadModule</apiName><shortdesc>
	 Load an application module containing a set of ASJS classes.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>aModuleName</apiItemName><apiType value="String"/><apiDesc>the classname of the module to load (should be in a file
	 called aModuleName.js
	 </apiDesc></apiParam><apiParam><apiItemName>aCallback</apiItemName><apiOperationClassifier>dom.domobjects:EventFunction</apiOperationClassifier><apiDesc>an EventFunction which is called when the application thinks
	 all queued classes have been loaded (should check with hasModule to see if
	 everything is actually ready).
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Load an application module containing a set of ASJS classes. This makes it
	 possible to load parts of the application on demand (e.g. only when an HTML
	 fallback is to be displayed).
	 
	 </apiDesc></apiOperationDetail></apiOperation></apiPackage>